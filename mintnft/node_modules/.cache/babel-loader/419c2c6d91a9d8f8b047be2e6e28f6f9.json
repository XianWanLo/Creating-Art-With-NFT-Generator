{"ast":null,"code":"require('dotenv').config();\n\nconst key = process.env.REACT_APP_PINATA_KEY;\nconst secret = process.env.REACT_APP_PINATA_SECRET;\n\nconst axios = require('axios'); //upload file to ipfs\n\n\nexport const pinFileToIPFS = async imageFile => {\n  const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\n  let data = new FormData();\n  data.append(\"file\", imageFile);\n  return axios //        .post(url, file, {\n  //            headers: {\n  //                pinata_api_key: key,\n  //                pinata_secret_api_key: secret,\n  //            }\n  //        })\n  .post(url, data, {\n    maxBodyLength: 'Infinity',\n    headers: {\n      'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\n      pinata_api_key: key,\n      pinata_secret_api_key: secret\n    }\n  }).then(function (response) {\n    return {\n      success: true,\n      pinataUrl: \"https://gateway.pinata.cloud/ipfs/\" + response.data.IpfsHash\n    };\n  }).catch(function (error) {\n    console.log(error);\n    return {\n      success: false,\n      message: error.message\n    };\n  });\n};\nexport const pinJSONToIPFS = async JSONBody => {\n  const url = `https://api.pinata.cloud/pinning/pinJSONToIPFS`; //making axios POST request to Pinata ⬇️\n\n  return axios.post(url, JSONBody, {\n    headers: {\n      pinata_api_key: key,\n      pinata_secret_api_key: secret\n    }\n  }).then(function (response) {\n    return {\n      success: true,\n      pinataUrl: \"https://gateway.pinata.cloud/ipfs/\" + response.data.IpfsHash\n    };\n  }).catch(function (error) {\n    console.log(error);\n    return {\n      success: false,\n      message: error.message\n    };\n  });\n};","map":{"version":3,"sources":["C:/Users/x7491/Creating-Art-With-NFT-Generator/mintnft/src/utils/pinata.js"],"names":["require","config","key","process","env","REACT_APP_PINATA_KEY","secret","REACT_APP_PINATA_SECRET","axios","pinFileToIPFS","imageFile","url","data","FormData","append","post","maxBodyLength","headers","_boundary","pinata_api_key","pinata_secret_api_key","then","response","success","pinataUrl","IpfsHash","catch","error","console","log","message","pinJSONToIPFS","JSONBody"],"mappings":"AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAAxB;AACA,MAAMC,MAAM,GAAGH,OAAO,CAACC,GAAR,CAAYG,uBAA3B;;AAEA,MAAMC,KAAK,GAAGR,OAAO,CAAC,OAAD,CAArB,C,CAEA;;;AACA,OAAO,MAAMS,aAAa,GAAG,MAAMC,SAAN,IAAoB;AAC7C,QAAMC,GAAG,GAAI,gDAAb;AACA,MAAIC,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,EAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBJ,SAApB;AACA,SAAOF,KAAK,CAChB;AACA;AACA;AACA;AACA;AACA;AANgB,GAOPO,IAPE,CAOGJ,GAPH,EAOQC,IAPR,EAOc;AACbI,IAAAA,aAAa,EAAE,UADF;AAEbC,IAAAA,OAAO,EAAE;AACL,sBAAiB,iCAAgCL,IAAI,CAACM,SAAU,EAD3D;AAELC,MAAAA,cAAc,EAAEjB,GAFX;AAGLkB,MAAAA,qBAAqB,EAAEd;AAHlB;AAFI,GAPd,EAeFe,IAfE,CAeG,UAAUC,QAAV,EAAoB;AACvB,WAAO;AACHC,MAAAA,OAAO,EAAE,IADN;AAEHC,MAAAA,SAAS,EAAE,uCAAuCF,QAAQ,CAACV,IAAT,CAAca;AAF7D,KAAP;AAIF,GApBE,EAqBFC,KArBE,CAqBI,UAAUC,KAAV,EAAiB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO;AACHJ,MAAAA,OAAO,EAAE,KADN;AAEHO,MAAAA,OAAO,EAAEH,KAAK,CAACG;AAFZ,KAAP;AAIH,GA3BE,CAAP;AA4BH,CAhCM;AAkCP,OAAO,MAAMC,aAAa,GAAG,MAAMC,QAAN,IAAmB;AAC5C,QAAMrB,GAAG,GAAI,gDAAb,CAD4C,CAE5C;;AACA,SAAOH,KAAK,CACPO,IADE,CACGJ,GADH,EACQqB,QADR,EACkB;AACjBf,IAAAA,OAAO,EAAE;AACLE,MAAAA,cAAc,EAAEjB,GADX;AAELkB,MAAAA,qBAAqB,EAAEd;AAFlB;AADQ,GADlB,EAOFe,IAPE,CAOG,UAAUC,QAAV,EAAoB;AACvB,WAAO;AACHC,MAAAA,OAAO,EAAE,IADN;AAEHC,MAAAA,SAAS,EAAE,uCAAuCF,QAAQ,CAACV,IAAT,CAAca;AAF7D,KAAP;AAIF,GAZE,EAaFC,KAbE,CAaI,UAAUC,KAAV,EAAiB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO;AACHJ,MAAAA,OAAO,EAAE,KADN;AAEHO,MAAAA,OAAO,EAAEH,KAAK,CAACG;AAFZ,KAAP;AAIH,GAnBE,CAAP;AAoBH,CAvBM","sourcesContent":["require('dotenv').config();\r\nconst key = process.env.REACT_APP_PINATA_KEY;\r\nconst secret = process.env.REACT_APP_PINATA_SECRET;\r\n\r\nconst axios = require('axios');\r\n\r\n//upload file to ipfs\r\nexport const pinFileToIPFS = async(imageFile) => {\r\n    const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\r\n    let data = new FormData();\r\n    data.append(\"file\", imageFile);\r\n    return axios\r\n//        .post(url, file, {\r\n//            headers: {\r\n//                pinata_api_key: key,\r\n//                pinata_secret_api_key: secret,\r\n//            }\r\n//        })\r\n        .post(url, data, {\r\n            maxBodyLength: 'Infinity',\r\n            headers: {\r\n                'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\r\n                pinata_api_key: key,\r\n                pinata_secret_api_key: secret\r\n            }\r\n        })\r\n        .then(function (response) {\r\n           return {\r\n               success: true,\r\n               pinataUrl: \"https://gateway.pinata.cloud/ipfs/\" + response.data.IpfsHash\r\n           };\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error)\r\n            return {\r\n                success: false,\r\n                message: error.message,\r\n            }\r\n        });\r\n}\r\n\r\nexport const pinJSONToIPFS = async(JSONBody) => {\r\n    const url = `https://api.pinata.cloud/pinning/pinJSONToIPFS`;\r\n    //making axios POST request to Pinata ⬇️\r\n    return axios\r\n        .post(url, JSONBody, {\r\n            headers: {\r\n                pinata_api_key: key,\r\n                pinata_secret_api_key: secret,\r\n            }\r\n        })\r\n        .then(function (response) {\r\n           return {\r\n               success: true,\r\n               pinataUrl: \"https://gateway.pinata.cloud/ipfs/\" + response.data.IpfsHash\r\n           };\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error)\r\n            return {\r\n                success: false,\r\n                message: error.message,\r\n            }\r\n        });\r\n};"]},"metadata":{},"sourceType":"module"}