{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar chains_1 = require(\"./chains\");\n\nvar hardforks_1 = require(\"./hardforks\");\n/**\n * Common class to access chain and hardfork parameters\n */\n\n\nvar Common =\n/** @class */\nfunction () {\n  /**\n   * @constructor\n   * @param chain String ('mainnet') or Number (1) chain\n   * @param hardfork String identifier ('byzantium') for hardfork (optional)\n   * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n   */\n  function Common(chain, hardfork, supportedHardforks) {\n    this._chainParams = this.setChain(chain);\n    this._hardfork = null;\n    this._supportedHardforks = supportedHardforks === undefined ? [] : supportedHardforks;\n\n    if (hardfork) {\n      this.setHardfork(hardfork);\n    }\n  }\n  /**\n   * Creates a Common object for a custom chain, based on a standard one. It uses all the [[Chain]]\n   * params from [[baseChain]] except the ones overridden in [[customChainParams]].\n   *\n   * @param baseChain The name (`mainnet`) or id (`1`) of a standard chain used to base the custom\n   * chain params on.\n   * @param customChainParams The custom parameters of the chain.\n   * @param hardfork String identifier ('byzantium') for hardfork (optional)\n   * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n   */\n\n\n  Common.forCustomChain = function (baseChain, customChainParams, hardfork, supportedHardforks) {\n    var standardChainParams = Common._getChainParams(baseChain);\n\n    return new Common(__assign(__assign({}, standardChainParams), customChainParams), hardfork, supportedHardforks);\n  };\n\n  Common._getChainParams = function (chain) {\n    if (typeof chain === 'number') {\n      if (chains_1.chains['names'][chain]) {\n        return chains_1.chains[chains_1.chains['names'][chain]];\n      }\n\n      throw new Error(\"Chain with ID \" + chain + \" not supported\");\n    }\n\n    if (chains_1.chains[chain]) {\n      return chains_1.chains[chain];\n    }\n\n    throw new Error(\"Chain with name \" + chain + \" not supported\");\n  };\n  /**\n   * Sets the chain\n   * @param chain String ('mainnet') or Number (1) chain\n   *     representation. Or, a Dictionary of chain parameters for a private network.\n   * @returns The dictionary with parameters set as chain\n   */\n\n\n  Common.prototype.setChain = function (chain) {\n    if (typeof chain === 'number' || typeof chain === 'string') {\n      this._chainParams = Common._getChainParams(chain);\n    } else if (typeof chain === 'object') {\n      var required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];\n\n      for (var _i = 0, required_1 = required; _i < required_1.length; _i++) {\n        var param = required_1[_i];\n\n        if (chain[param] === undefined) {\n          throw new Error(\"Missing required chain parameter: \" + param);\n        }\n      }\n\n      this._chainParams = chain;\n    } else {\n      throw new Error('Wrong input format');\n    }\n\n    return this._chainParams;\n  };\n  /**\n   * Sets the hardfork to get params for\n   * @param hardfork String identifier ('byzantium')\n   */\n\n\n  Common.prototype.setHardfork = function (hardfork) {\n    if (!this._isSupportedHardfork(hardfork)) {\n      throw new Error(\"Hardfork \" + hardfork + \" not set as supported in supportedHardforks\");\n    }\n\n    var changed = false;\n\n    for (var _i = 0, hardforkChanges_1 = hardforks_1.hardforks; _i < hardforkChanges_1.length; _i++) {\n      var hfChanges = hardforkChanges_1[_i];\n\n      if (hfChanges[0] === hardfork) {\n        this._hardfork = hardfork;\n        changed = true;\n      }\n    }\n\n    if (!changed) {\n      throw new Error(\"Hardfork with name \" + hardfork + \" not supported\");\n    }\n  };\n  /**\n   * Internal helper function to choose between hardfork set and hardfork provided as param\n   * @param hardfork Hardfork given to function as a parameter\n   * @returns Hardfork chosen to be used\n   */\n\n\n  Common.prototype._chooseHardfork = function (hardfork, onlySupported) {\n    onlySupported = onlySupported === undefined ? true : onlySupported;\n\n    if (!hardfork) {\n      if (!this._hardfork) {\n        throw new Error('Method called with neither a hardfork set nor provided by param');\n      } else {\n        hardfork = this._hardfork;\n      }\n    } else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n      throw new Error(\"Hardfork \" + hardfork + \" not set as supported in supportedHardforks\");\n    }\n\n    return hardfork;\n  };\n  /**\n   * Internal helper function, returns the params for the given hardfork for the chain set\n   * @param hardfork Hardfork name\n   * @returns Dictionary with hardfork params\n   */\n\n\n  Common.prototype._getHardfork = function (hardfork) {\n    var hfs = this.hardforks();\n\n    for (var _i = 0, hfs_1 = hfs; _i < hfs_1.length; _i++) {\n      var hf = hfs_1[_i];\n      if (hf['name'] === hardfork) return hf;\n    }\n\n    throw new Error(\"Hardfork \" + hardfork + \" not defined for chain \" + this.chainName());\n  };\n  /**\n   * Internal helper function to check if a hardfork is set to be supported by the library\n   * @param hardfork Hardfork name\n   * @returns True if hardfork is supported\n   */\n\n\n  Common.prototype._isSupportedHardfork = function (hardfork) {\n    if (this._supportedHardforks.length > 0) {\n      for (var _i = 0, _a = this._supportedHardforks; _i < _a.length; _i++) {\n        var supportedHf = _a[_i];\n        if (hardfork === supportedHf) return true;\n      }\n    } else {\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * Returns the parameter corresponding to a hardfork\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow', 'casper', 'sharding')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param hardfork Hardfork name, optional if hardfork set\n   */\n\n\n  Common.prototype.param = function (topic, name, hardfork) {\n    hardfork = this._chooseHardfork(hardfork);\n    var value;\n\n    for (var _i = 0, hardforkChanges_2 = hardforks_1.hardforks; _i < hardforkChanges_2.length; _i++) {\n      var hfChanges = hardforkChanges_2[_i];\n\n      if (!hfChanges[1][topic]) {\n        throw new Error(\"Topic \" + topic + \" not defined\");\n      }\n\n      if (hfChanges[1][topic][name] !== undefined) {\n        value = hfChanges[1][topic][name].v;\n      }\n\n      if (hfChanges[0] === hardfork) break;\n    }\n\n    if (value === undefined) {\n      throw new Error(topic + \" value for \" + name + \" not found\");\n    }\n\n    return value;\n  };\n  /**\n   * Returns a parameter for the hardfork active on block number\n   * @param topic Parameter topic\n   * @param name Parameter name\n   * @param blockNumber Block number\n   */\n\n\n  Common.prototype.paramByBlock = function (topic, name, blockNumber) {\n    var activeHfs = this.activeHardforks(blockNumber);\n    var hardfork = activeHfs[activeHfs.length - 1]['name'];\n    return this.param(topic, name, hardfork);\n  };\n  /**\n   * Checks if set or provided hardfork is active on block number\n   * @param hardfork Hardfork name or null (for HF set)\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n\n\n  Common.prototype.hardforkIsActiveOnBlock = function (hardfork, blockNumber, opts) {\n    opts = opts !== undefined ? opts : {};\n    var onlySupported = opts.onlySupported === undefined ? false : opts.onlySupported;\n    hardfork = this._chooseHardfork(hardfork, onlySupported);\n    var hfBlock = this.hardforkBlock(hardfork);\n    if (hfBlock !== null && blockNumber >= hfBlock) return true;\n    return false;\n  };\n  /**\n   * Alias to hardforkIsActiveOnBlock when hardfork is set\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n\n\n  Common.prototype.activeOnBlock = function (blockNumber, opts) {\n    return this.hardforkIsActiveOnBlock(null, blockNumber, opts);\n  };\n  /**\n   * Sequence based check if given or set HF1 is greater than or equal HF2\n   * @param hardfork1 Hardfork name or null (if set)\n   * @param hardfork2 Hardfork name\n   * @param opts Hardfork options\n   * @returns True if HF1 gte HF2\n   */\n\n\n  Common.prototype.hardforkGteHardfork = function (hardfork1, hardfork2, opts) {\n    opts = opts !== undefined ? opts : {};\n    var onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive;\n    hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported);\n    var hardforks;\n\n    if (onlyActive) {\n      hardforks = this.activeHardforks(null, opts);\n    } else {\n      hardforks = this.hardforks();\n    }\n\n    var posHf1 = -1,\n        posHf2 = -1;\n    var index = 0;\n\n    for (var _i = 0, hardforks_2 = hardforks; _i < hardforks_2.length; _i++) {\n      var hf = hardforks_2[_i];\n      if (hf['name'] === hardfork1) posHf1 = index;\n      if (hf['name'] === hardfork2) posHf2 = index;\n      index += 1;\n    }\n\n    return posHf1 >= posHf2;\n  };\n  /**\n   * Alias to hardforkGteHardfork when hardfork is set\n   * @param hardfork Hardfork name\n   * @param opts Hardfork options\n   * @returns True if hardfork set is greater than hardfork provided\n   */\n\n\n  Common.prototype.gteHardfork = function (hardfork, opts) {\n    return this.hardforkGteHardfork(null, hardfork, opts);\n  };\n  /**\n   * Checks if given or set hardfork is active on the chain\n   * @param hardfork Hardfork name, optional if HF set\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if hardfork is active on the chain\n   */\n\n\n  Common.prototype.hardforkIsActiveOnChain = function (hardfork, opts) {\n    opts = opts !== undefined ? opts : {};\n    var onlySupported = opts.onlySupported === undefined ? false : opts.onlySupported;\n    hardfork = this._chooseHardfork(hardfork, onlySupported);\n\n    for (var _i = 0, _a = this.hardforks(); _i < _a.length; _i++) {\n      var hf = _a[_i];\n      if (hf['name'] === hardfork && hf['block'] !== null) return true;\n    }\n\n    return false;\n  };\n  /**\n   * Returns the active hardfork switches for the current chain\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Array with hardfork arrays\n   */\n\n\n  Common.prototype.activeHardforks = function (blockNumber, opts) {\n    opts = opts !== undefined ? opts : {};\n    var activeHardforks = [];\n    var hfs = this.hardforks();\n\n    for (var _i = 0, hfs_2 = hfs; _i < hfs_2.length; _i++) {\n      var hf = hfs_2[_i];\n      if (hf['block'] === null) continue;\n      if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block']) break;\n      if (opts.onlySupported && !this._isSupportedHardfork(hf['name'])) continue;\n      activeHardforks.push(hf);\n    }\n\n    return activeHardforks;\n  };\n  /**\n   * Returns the latest active hardfork name for chain or block or throws if unavailable\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Hardfork name\n   */\n\n\n  Common.prototype.activeHardfork = function (blockNumber, opts) {\n    opts = opts !== undefined ? opts : {};\n    var activeHardforks = this.activeHardforks(blockNumber, opts);\n\n    if (activeHardforks.length > 0) {\n      return activeHardforks[activeHardforks.length - 1]['name'];\n    } else {\n      throw new Error(\"No (supported) active hardfork found\");\n    }\n  };\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number\n   */\n\n\n  Common.prototype.hardforkBlock = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false);\n    return this._getHardfork(hardfork)['block'];\n  };\n  /**\n   * True if block number provided is the hardfork (given or set) change block of the current chain\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   */\n\n\n  Common.prototype.isHardforkBlock = function (blockNumber, hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false);\n\n    if (this.hardforkBlock(hardfork) === blockNumber) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\n   * Provide the consensus type for the hardfork set or provided as param\n   * @param hardfork Hardfork name, optional if hardfork set\n   * @returns Consensus type (e.g. 'pow', 'poa')\n   */\n\n\n  Common.prototype.consensus = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork);\n    return this._getHardfork(hardfork)['consensus'];\n  };\n  /**\n   * Provide the finality type for the hardfork set or provided as param\n   * @param {String} hardfork Hardfork name, optional if hardfork set\n   * @returns {String} Finality type (e.g. 'pos', null of no finality)\n   */\n\n\n  Common.prototype.finality = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork);\n    return this._getHardfork(hardfork)['finality'];\n  };\n  /**\n   * Returns the Genesis parameters of current chain\n   * @returns Genesis dictionary\n   */\n\n\n  Common.prototype.genesis = function () {\n    return this._chainParams['genesis'];\n  };\n  /**\n   * Returns the hardforks for current chain\n   * @returns {Array} Array with arrays of hardforks\n   */\n\n\n  Common.prototype.hardforks = function () {\n    return this._chainParams['hardforks'];\n  };\n  /**\n   * Returns bootstrap nodes for the current chain\n   * @returns {Dictionary} Dict with bootstrap nodes\n   */\n\n\n  Common.prototype.bootstrapNodes = function () {\n    return this._chainParams['bootstrapNodes'];\n  };\n  /**\n   * Returns the hardfork set\n   * @returns Hardfork name\n   */\n\n\n  Common.prototype.hardfork = function () {\n    return this._hardfork;\n  };\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   */\n\n\n  Common.prototype.chainId = function () {\n    return this._chainParams['chainId'];\n  };\n  /**\n   * Returns the name of current chain\n   * @returns chain name (lower case)\n   */\n\n\n  Common.prototype.chainName = function () {\n    return chains_1.chains['names'][this.chainId()] || this._chainParams['name'];\n  };\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   */\n\n\n  Common.prototype.networkId = function () {\n    return this._chainParams['networkId'];\n  };\n\n  return Common;\n}();\n\nexports.default = Common;","map":{"version":3,"mappings":"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","names":["chain","hardfork","supportedHardforks","_chainParams","setChain","_hardfork","_supportedHardforks","undefined","setHardfork","Common","baseChain","customChainParams","standardChainParams","_getChainParams","__assign","chains_1","Error","required","_i","param","_isSupportedHardfork","changed","hfChanges","onlySupported","hfs","hardforks","hf","chainName","length","supportedHf","topic","name","_chooseHardfork","value","v","blockNumber","activeHfs","activeHardforks","opts","hfBlock","hardforkBlock","hardforkIsActiveOnBlock","hardfork1","hardfork2","onlyActive","posHf1","posHf2","index","hardforkGteHardfork","push","_getHardfork","chainId"],"sourceRoot":"","sources":["../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}