{"ast":null,"code":"\"use strict\";\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\n\nimport _classCallCheck from \"C:/Users/x7491/Creating-Art-With-NFT-Generator/mintnft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/x7491/Creating-Art-With-NFT-Generator/mintnft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _BN from \"bn.js\";\nvar BN = _BN.BN;\nimport { hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\nvar _constructorGuard = {};\nvar MAX_SAFE = 0x1fffffffffffff;\nexport function isBigNumberish(value) {\n  return value != null && (BigNumber.isBigNumber(value) || typeof value === \"number\" && value % 1 === 0 || typeof value === \"string\" && !!value.match(/^-?[0-9]+$/) || isHexString(value) || typeof value === \"bigint\" || isBytes(value));\n} // Only warn about passing 10 into radix once\n\nvar _warnedToStringRadix = false;\nexport var BigNumber = /*#__PURE__*/function () {\n  function BigNumber(constructorGuard, hex) {\n    _classCallCheck(this, BigNumber);\n\n    logger.checkNew(this instanceof BigNumber ? this.constructor : void 0, BigNumber);\n\n    if (constructorGuard !== _constructorGuard) {\n      logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"new (BigNumber)\"\n      });\n    }\n\n    this._hex = hex;\n    this._isBigNumber = true;\n    Object.freeze(this);\n  }\n\n  _createClass(BigNumber, [{\n    key: \"fromTwos\",\n    value: function fromTwos(value) {\n      return toBigNumber(toBN(this).fromTwos(value));\n    }\n  }, {\n    key: \"toTwos\",\n    value: function toTwos(value) {\n      return toBigNumber(toBN(this).toTwos(value));\n    }\n  }, {\n    key: \"abs\",\n    value: function abs() {\n      if (this._hex[0] === \"-\") {\n        return BigNumber.from(this._hex.substring(1));\n      }\n\n      return this;\n    }\n  }, {\n    key: \"add\",\n    value: function add(other) {\n      return toBigNumber(toBN(this).add(toBN(other)));\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(other) {\n      return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n  }, {\n    key: \"div\",\n    value: function div(other) {\n      var o = BigNumber.from(other);\n\n      if (o.isZero()) {\n        throwFault(\"division by zero\", \"div\");\n      }\n\n      return toBigNumber(toBN(this).div(toBN(other)));\n    }\n  }, {\n    key: \"mul\",\n    value: function mul(other) {\n      return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n  }, {\n    key: \"mod\",\n    value: function mod(other) {\n      var value = toBN(other);\n\n      if (value.isNeg()) {\n        throwFault(\"cannot modulo negative values\", \"mod\");\n      }\n\n      return toBigNumber(toBN(this).umod(value));\n    }\n  }, {\n    key: \"pow\",\n    value: function pow(other) {\n      var value = toBN(other);\n\n      if (value.isNeg()) {\n        throwFault(\"cannot raise to negative values\", \"pow\");\n      }\n\n      return toBigNumber(toBN(this).pow(value));\n    }\n  }, {\n    key: \"and\",\n    value: function and(other) {\n      var value = toBN(other);\n\n      if (this.isNegative() || value.isNeg()) {\n        throwFault(\"cannot 'and' negative values\", \"and\");\n      }\n\n      return toBigNumber(toBN(this).and(value));\n    }\n  }, {\n    key: \"or\",\n    value: function or(other) {\n      var value = toBN(other);\n\n      if (this.isNegative() || value.isNeg()) {\n        throwFault(\"cannot 'or' negative values\", \"or\");\n      }\n\n      return toBigNumber(toBN(this).or(value));\n    }\n  }, {\n    key: \"xor\",\n    value: function xor(other) {\n      var value = toBN(other);\n\n      if (this.isNegative() || value.isNeg()) {\n        throwFault(\"cannot 'xor' negative values\", \"xor\");\n      }\n\n      return toBigNumber(toBN(this).xor(value));\n    }\n  }, {\n    key: \"mask\",\n    value: function mask(value) {\n      if (this.isNegative() || value < 0) {\n        throwFault(\"cannot mask negative values\", \"mask\");\n      }\n\n      return toBigNumber(toBN(this).maskn(value));\n    }\n  }, {\n    key: \"shl\",\n    value: function shl(value) {\n      if (this.isNegative() || value < 0) {\n        throwFault(\"cannot shift negative values\", \"shl\");\n      }\n\n      return toBigNumber(toBN(this).shln(value));\n    }\n  }, {\n    key: \"shr\",\n    value: function shr(value) {\n      if (this.isNegative() || value < 0) {\n        throwFault(\"cannot shift negative values\", \"shr\");\n      }\n\n      return toBigNumber(toBN(this).shrn(value));\n    }\n  }, {\n    key: \"eq\",\n    value: function eq(other) {\n      return toBN(this).eq(toBN(other));\n    }\n  }, {\n    key: \"lt\",\n    value: function lt(other) {\n      return toBN(this).lt(toBN(other));\n    }\n  }, {\n    key: \"lte\",\n    value: function lte(other) {\n      return toBN(this).lte(toBN(other));\n    }\n  }, {\n    key: \"gt\",\n    value: function gt(other) {\n      return toBN(this).gt(toBN(other));\n    }\n  }, {\n    key: \"gte\",\n    value: function gte(other) {\n      return toBN(this).gte(toBN(other));\n    }\n  }, {\n    key: \"isNegative\",\n    value: function isNegative() {\n      return this._hex[0] === \"-\";\n    }\n  }, {\n    key: \"isZero\",\n    value: function isZero() {\n      return toBN(this).isZero();\n    }\n  }, {\n    key: \"toNumber\",\n    value: function toNumber() {\n      try {\n        return toBN(this).toNumber();\n      } catch (error) {\n        throwFault(\"overflow\", \"toNumber\", this.toString());\n      }\n\n      return null;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      // Lots of people expect this, which we do not support, so check (See: #889)\n      if (arguments.length > 0) {\n        if (arguments[0] === 10) {\n          if (!_warnedToStringRadix) {\n            _warnedToStringRadix = true;\n            logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n          }\n        } else if (arguments[0] === 16) {\n          logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n        } else {\n          logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n        }\n      }\n\n      return toBN(this).toString(10);\n    }\n  }, {\n    key: \"toHexString\",\n    value: function toHexString() {\n      return this._hex;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(key) {\n      return {\n        type: \"BigNumber\",\n        hex: this.toHexString()\n      };\n    }\n  }], [{\n    key: \"from\",\n    value: function from(value) {\n      if (value instanceof BigNumber) {\n        return value;\n      }\n\n      if (typeof value === \"string\") {\n        if (value.match(/^-?0x[0-9a-f]+$/i)) {\n          return new BigNumber(_constructorGuard, toHex(value));\n        }\n\n        if (value.match(/^-?[0-9]+$/)) {\n          return new BigNumber(_constructorGuard, toHex(new BN(value)));\n        }\n\n        return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n      }\n\n      if (typeof value === \"number\") {\n        if (value % 1) {\n          throwFault(\"underflow\", \"BigNumber.from\", value);\n        }\n\n        if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n          throwFault(\"overflow\", \"BigNumber.from\", value);\n        }\n\n        return BigNumber.from(String(value));\n      }\n\n      var anyValue = value;\n\n      if (typeof anyValue === \"bigint\") {\n        return BigNumber.from(anyValue.toString());\n      }\n\n      if (isBytes(anyValue)) {\n        return BigNumber.from(hexlify(anyValue));\n      }\n\n      if (anyValue) {\n        // Hexable interface (takes piority)\n        if (anyValue.toHexString) {\n          var hex = anyValue.toHexString();\n\n          if (typeof hex === \"string\") {\n            return BigNumber.from(hex);\n          }\n        } else {\n          // For now, handle legacy JSON-ified values (goes away in v6)\n          var _hex = anyValue._hex; // New-form JSON\n\n          if (_hex == null && anyValue.type === \"BigNumber\") {\n            _hex = anyValue.hex;\n          }\n\n          if (typeof _hex === \"string\") {\n            if (isHexString(_hex) || _hex[0] === \"-\" && isHexString(_hex.substring(1))) {\n              return BigNumber.from(_hex);\n            }\n          }\n        }\n      }\n\n      return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n  }, {\n    key: \"isBigNumber\",\n    value: function isBigNumber(value) {\n      return !!(value && value._isBigNumber);\n    }\n  }]);\n\n  return BigNumber;\n}(); // Normalize the hex string\n\nfunction toHex(value) {\n  // For BN, call on the hex string\n  if (typeof value !== \"string\") {\n    return toHex(value.toString(16));\n  } // If negative, prepend the negative sign to the normalized positive value\n\n\n  if (value[0] === \"-\") {\n    // Strip off the negative sign\n    value = value.substring(1); // Cannot have mulitple negative signs (e.g. \"--0x04\")\n\n    if (value[0] === \"-\") {\n      logger.throwArgumentError(\"invalid hex\", \"value\", value);\n    } // Call toHex on the positive component\n\n\n    value = toHex(value); // Do not allow \"-0x00\"\n\n    if (value === \"0x00\") {\n      return value;\n    } // Negate the value\n\n\n    return \"-\" + value;\n  } // Add a \"0x\" prefix if missing\n\n\n  if (value.substring(0, 2) !== \"0x\") {\n    value = \"0x\" + value;\n  } // Normalize zero\n\n\n  if (value === \"0x\") {\n    return \"0x00\";\n  } // Make the string even length\n\n\n  if (value.length % 2) {\n    value = \"0x0\" + value.substring(2);\n  } // Trim to smallest even-length string\n\n\n  while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n    value = \"0x\" + value.substring(4);\n  }\n\n  return value;\n}\n\nfunction toBigNumber(value) {\n  return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value) {\n  var hex = BigNumber.from(value).toHexString();\n\n  if (hex[0] === \"-\") {\n    return new BN(\"-\" + hex.substring(3), 16);\n  }\n\n  return new BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault, operation, value) {\n  var params = {\n    fault: fault,\n    operation: operation\n  };\n\n  if (value != null) {\n    params.value = value;\n  }\n\n  return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n} // value should have no prefix\n\n\nexport function _base36To16(value) {\n  return new BN(value, 36).toString(16);\n} // value should have no prefix\n\nexport function _base16To36(value) {\n  return new BN(value, 16).toString(36);\n}","map":{"version":3,"mappings":"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","names":["_BN","BN","hexlify","isBytes","isHexString","Logger","version","logger","_constructorGuard","MAX_SAFE","isBigNumberish","value","BigNumber","isBigNumber","match","_warnedToStringRadix","constructorGuard","hex","checkNew","throwError","errors","UNSUPPORTED_OPERATION","operation","_hex","_isBigNumber","Object","freeze","toBigNumber","toBN","fromTwos","toTwos","from","substring","other","add","sub","o","isZero","throwFault","div","mul","isNeg","umod","pow","isNegative","and","or","xor","maskn","shln","shrn","eq","lt","lte","gt","gte","toNumber","error","toString","arguments","length","warn","UNEXPECTED_ARGUMENT","key","type","toHexString","toHex","throwArgumentError","String","anyValue","fault","params","NUMERIC_FAULT","_base36To16","_base16To36"],"sourceRoot":"","sources":["../src.ts/bignumber.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}