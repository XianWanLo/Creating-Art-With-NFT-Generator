{"ast":null,"code":"\"use strict\"; // This file is imported from secp256k1 v3\n// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BN = require(\"bn.js\");\n\nvar EC = require('elliptic').ec;\n\nvar ec = new EC('secp256k1');\nvar ecparams = ec.curve;\n\nexports.privateKeyExport = function (privateKey, compressed) {\n  if (compressed === void 0) {\n    compressed = true;\n  }\n\n  var d = new BN(privateKey);\n\n  if (d.ucmp(ecparams.n) >= 0) {\n    throw new Error(\"couldn't export to DER format\");\n  }\n\n  var point = ec.g.mul(d);\n  return toPublicKey(point.getX(), point.getY(), compressed);\n};\n\nexports.privateKeyModInverse = function (privateKey) {\n  var bn = new BN(privateKey);\n\n  if (bn.ucmp(ecparams.n) >= 0 || bn.isZero()) {\n    throw new Error('private key range is invalid');\n  }\n\n  return bn.invm(ecparams.n).toArrayLike(Buffer, 'be', 32);\n};\n\nexports.signatureImport = function (sigObj) {\n  var r = new BN(sigObj.r);\n\n  if (r.ucmp(ecparams.n) >= 0) {\n    r = new BN(0);\n  }\n\n  var s = new BN(sigObj.s);\n\n  if (s.ucmp(ecparams.n) >= 0) {\n    s = new BN(0);\n  }\n\n  return Buffer.concat([r.toArrayLike(Buffer, 'be', 32), s.toArrayLike(Buffer, 'be', 32)]);\n};\n\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n  if (compressed === void 0) {\n    compressed = true;\n  }\n\n  var point = ec.keyFromPublic(publicKey);\n  var scalar = new BN(privateKey);\n\n  if (scalar.ucmp(ecparams.n) >= 0 || scalar.isZero()) {\n    throw new Error('scalar was invalid (zero or overflow)');\n  }\n\n  var shared = point.pub.mul(scalar);\n  return toPublicKey(shared.getX(), shared.getY(), compressed);\n};\n\nvar toPublicKey = function toPublicKey(x, y, compressed) {\n  var publicKey;\n\n  if (compressed) {\n    publicKey = Buffer.alloc(33);\n    publicKey[0] = y.isOdd() ? 0x03 : 0x02;\n    x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);\n  } else {\n    publicKey = Buffer.alloc(65);\n    publicKey[0] = 0x04;\n    x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);\n    y.toArrayLike(Buffer, 'be', 32).copy(publicKey, 33);\n  }\n\n  return publicKey;\n};","map":{"version":3,"mappings":"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","names":["EC","require","ec","ecparams","curve","exports","privateKeyExport","privateKey","compressed","d","BN","ucmp","n","Error","point","g","mul","toPublicKey","getX","getY","privateKeyModInverse","bn","isZero","invm","toArrayLike","Buffer","signatureImport","sigObj","r","s","concat","ecdhUnsafe","publicKey","keyFromPublic","scalar","shared","pub","x","y","alloc","isOdd","copy"],"sourceRoot":"","sources":["../../src/secp256k1v3-lib/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}