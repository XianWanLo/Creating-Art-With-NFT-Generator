{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Helper function for exhaustive checks of discriminated unions.\n * https://basarat.gitbooks.io/typescript/docs/types/discriminated-unions.html\n *\n * @example\n *\n *    type A = {type: 'a'};\n *    type B = {type: 'b'};\n *    type Union = A | B;\n *\n *    function doSomething(arg: Union) {\n *      if (arg.type === 'a') {\n *        return something;\n *      }\n *\n *      if (arg.type === 'b') {\n *        return somethingElse;\n *      }\n *\n *      // TS will error if there are other types in the union\n *      // Will throw an Error when called at runtime.\n *      // Use `assertNever(arg, true)` instead to fail silently.\n *      return assertNever(arg);\n *    }\n */\n\nfunction assertNever(value, noThrow) {\n  if (noThrow) {\n    return value;\n  }\n\n  throw new Error(\"Unhandled discriminated union member: \" + JSON.stringify(value));\n}\n\nexports.assertNever = assertNever;\nexports.default = assertNever;","map":{"version":3,"names":["Object","defineProperty","exports","value","assertNever","noThrow","Error","JSON","stringify","default"],"sources":["C:/Users/x7491/Creating-Art-With-NFT-Generator/mintnft/node_modules/assert-never/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Helper function for exhaustive checks of discriminated unions.\n * https://basarat.gitbooks.io/typescript/docs/types/discriminated-unions.html\n *\n * @example\n *\n *    type A = {type: 'a'};\n *    type B = {type: 'b'};\n *    type Union = A | B;\n *\n *    function doSomething(arg: Union) {\n *      if (arg.type === 'a') {\n *        return something;\n *      }\n *\n *      if (arg.type === 'b') {\n *        return somethingElse;\n *      }\n *\n *      // TS will error if there are other types in the union\n *      // Will throw an Error when called at runtime.\n *      // Use `assertNever(arg, true)` instead to fail silently.\n *      return assertNever(arg);\n *    }\n */\nfunction assertNever(value, noThrow) {\n    if (noThrow) {\n        return value;\n    }\n    throw new Error(\"Unhandled discriminated union member: \" + JSON.stringify(value));\n}\nexports.assertNever = assertNever;\nexports.default = assertNever;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,CAAqBD,KAArB,EAA4BE,OAA5B,EAAqC;EACjC,IAAIA,OAAJ,EAAa;IACT,OAAOF,KAAP;EACH;;EACD,MAAM,IAAIG,KAAJ,CAAU,2CAA2CC,IAAI,CAACC,SAAL,CAAeL,KAAf,CAArD,CAAN;AACH;;AACDD,OAAO,CAACE,WAAR,GAAsBA,WAAtB;AACAF,OAAO,CAACO,OAAR,GAAkBL,WAAlB"},"metadata":{},"sourceType":"script"}