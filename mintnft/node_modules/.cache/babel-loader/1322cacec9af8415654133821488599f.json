{"ast":null,"code":"import { concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nexport var messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\nexport function hashMessage(message) {\n  if (typeof message === \"string\") {\n    message = toUtf8Bytes(message);\n  }\n\n  return keccak256(concat([toUtf8Bytes(messagePrefix), toUtf8Bytes(String(message.length)), message]));\n}","map":{"version":3,"mappings":"AAAA,SAAgBA,MAAhB,QAA8B,sBAA9B;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AAEA,OAAO,IAAMC,aAAa,GAAG,gCAAtB;AAEP,OAAM,SAAUC,WAAV,CAAsBC,OAAtB,EAA6C;EAC/C,IAAI,OAAOA,OAAP,KAAoB,QAAxB,EAAkC;IAAEA,OAAO,GAAGH,WAAW,CAACG,OAAD,CAArB;EAAiC;;EACrE,OAAOJ,SAAS,CAACD,MAAM,CAAC,CACpBE,WAAW,CAACC,aAAD,CADS,EAEpBD,WAAW,CAACI,MAAM,CAACD,OAAO,CAACE,MAAT,CAAP,CAFS,EAGpBF,OAHoB,CAAD,CAAP,CAAhB;AAKH","names":["concat","keccak256","toUtf8Bytes","messagePrefix","hashMessage","message","String","length"],"sourceRoot":"","sources":["../src.ts/message.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}