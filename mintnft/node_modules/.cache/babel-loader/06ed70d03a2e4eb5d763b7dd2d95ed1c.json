{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"C:/Users/x7491/Creating-Art-With-NFT-Generator/mintnft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/x7491/Creating-Art-With-NFT-Generator/mintnft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/x7491/Creating-Art-With-NFT-Generator/mintnft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/x7491/Creating-Art-With-NFT-Generator/mintnft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport var AddressCoder = /*#__PURE__*/function (_Coder) {\n  _inherits(AddressCoder, _Coder);\n\n  var _super = _createSuper(AddressCoder);\n\n  function AddressCoder(localName) {\n    _classCallCheck(this, AddressCoder);\n\n    return _super.call(this, \"address\", \"address\", localName, false);\n  }\n\n  _createClass(AddressCoder, [{\n    key: \"encode\",\n    value: function encode(writer, value) {\n      try {\n        getAddress(value);\n      } catch (error) {\n        this._throwError(error.message, value);\n      }\n\n      return writer.writeValue(value);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(reader) {\n      return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n    }\n  }]);\n\n  return AddressCoder;\n}(Coder);","map":{"version":3,"mappings":"AAAA;;;;;;AAEA,SAASA,UAAT,QAA2B,wBAA3B;AACA,SAASC,UAAT,QAA2B,sBAA3B;AAEA,SAASC,KAAT,QAAsC,kBAAtC;AAEA,WAAaC,YAAb;EAAA;;EAAA;;EAEI,sBAAYC,SAAZ,EAA6B;IAAA;;IAAA,yBACnB,SADmB,EACR,SADQ,EACGA,SADH,EACc,KADd;EAE5B;;EAJL;IAAA;IAAA,OAMI,gBAAOC,MAAP,EAAuBC,KAAvB,EAAoC;MAChC,IAAI;QACAN,UAAU,CAACM,KAAD,CAAV;MACH,CAFD,CAEE,OAAOC,KAAP,EAAc;QACZ,KAAKC,WAAL,CAAiBD,KAAK,CAACE,OAAvB,EAAgCH,KAAhC;MACH;;MACD,OAAOD,MAAM,CAACK,UAAP,CAAkBJ,KAAlB,CAAP;IACH;EAbL;IAAA;IAAA,OAeI,gBAAOK,MAAP,EAAqB;MACjB,OAAOX,UAAU,CAACC,UAAU,CAACU,MAAM,CAACC,SAAP,GAAmBC,WAAnB,EAAD,EAAmC,EAAnC,CAAX,CAAjB;IACH;EAjBL;;EAAA;AAAA,EAAkCX,KAAlC","names":["getAddress","hexZeroPad","Coder","AddressCoder","localName","writer","value","error","_throwError","message","writeValue","reader","readValue","toHexString"],"sourceRoot":"","sources":["../../src.ts/coders/address.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}