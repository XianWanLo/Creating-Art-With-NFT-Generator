{"ast":null,"code":"\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version); ///////////////////////////////\n\nfunction isHexable(value) {\n  return !!value.toHexString;\n}\n\nfunction addSlice(array) {\n  if (array.slice) {\n    return array;\n  }\n\n  array.slice = function () {\n    var args = Array.prototype.slice.call(arguments);\n    return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n  };\n\n  return array;\n}\n\nexport function isBytesLike(value) {\n  return isHexString(value) && !(value.length % 2) || isBytes(value);\n}\nexport function isBytes(value) {\n  if (value == null) {\n    return false;\n  }\n\n  if (value.constructor === Uint8Array) {\n    return true;\n  }\n\n  if (typeof value === \"string\") {\n    return false;\n  }\n\n  if (value.length == null) {\n    return false;\n  }\n\n  for (var i = 0; i < value.length; i++) {\n    var v = value[i];\n\n    if (typeof v !== \"number\" || v < 0 || v >= 256 || v % 1) {\n      return false;\n    }\n  }\n\n  return true;\n}\nexport function arrayify(value, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (typeof value === \"number\") {\n    logger.checkSafeUint53(value, \"invalid arrayify value\");\n    var result = [];\n\n    while (value) {\n      result.unshift(value & 0xff);\n      value = parseInt(String(value / 256));\n    }\n\n    if (result.length === 0) {\n      result.push(0);\n    }\n\n    return addSlice(new Uint8Array(result));\n  }\n\n  if (options.allowMissingPrefix && typeof value === \"string\" && value.substring(0, 2) !== \"0x\") {\n    value = \"0x\" + value;\n  }\n\n  if (isHexable(value)) {\n    value = value.toHexString();\n  }\n\n  if (isHexString(value)) {\n    var hex = value.substring(2);\n\n    if (hex.length % 2) {\n      if (options.hexPad === \"left\") {\n        hex = \"0x0\" + hex.substring(2);\n      } else if (options.hexPad === \"right\") {\n        hex += \"0\";\n      } else {\n        logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n      }\n    }\n\n    var _result = [];\n\n    for (var i = 0; i < hex.length; i += 2) {\n      _result.push(parseInt(hex.substring(i, i + 2), 16));\n    }\n\n    return addSlice(new Uint8Array(_result));\n  }\n\n  if (isBytes(value)) {\n    return addSlice(new Uint8Array(value));\n  }\n\n  return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n  var objects = items.map(function (item) {\n    return arrayify(item);\n  });\n  var length = objects.reduce(function (accum, item) {\n    return accum + item.length;\n  }, 0);\n  var result = new Uint8Array(length);\n  objects.reduce(function (offset, object) {\n    result.set(object, offset);\n    return offset + object.length;\n  }, 0);\n  return addSlice(result);\n}\nexport function stripZeros(value) {\n  var result = arrayify(value);\n\n  if (result.length === 0) {\n    return result;\n  } // Find the first non-zero entry\n\n\n  var start = 0;\n\n  while (start < result.length && result[start] === 0) {\n    start++;\n  } // If we started with zeros, strip them\n\n\n  if (start) {\n    result = result.slice(start);\n  }\n\n  return result;\n}\nexport function zeroPad(value, length) {\n  value = arrayify(value);\n\n  if (value.length > length) {\n    logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n  }\n\n  var result = new Uint8Array(length);\n  result.set(value, length - value.length);\n  return addSlice(result);\n}\nexport function isHexString(value, length) {\n  if (typeof value !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\nvar HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (typeof value === \"number\") {\n    logger.checkSafeUint53(value, \"invalid hexlify value\");\n    var hex = \"\";\n\n    while (value) {\n      hex = HexCharacters[value & 0x0f] + hex;\n      value = Math.floor(value / 16);\n    }\n\n    if (hex.length) {\n      if (hex.length % 2) {\n        hex = \"0\" + hex;\n      }\n\n      return \"0x\" + hex;\n    }\n\n    return \"0x00\";\n  }\n\n  if (options.allowMissingPrefix && typeof value === \"string\" && value.substring(0, 2) !== \"0x\") {\n    value = \"0x\" + value;\n  }\n\n  if (isHexable(value)) {\n    return value.toHexString();\n  }\n\n  if (isHexString(value)) {\n    if (value.length % 2) {\n      if (options.hexPad === \"left\") {\n        value = \"0x0\" + value.substring(2);\n      } else if (options.hexPad === \"right\") {\n        value += \"0\";\n      } else {\n        logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n      }\n    }\n\n    return value.toLowerCase();\n  }\n\n  if (isBytes(value)) {\n    var result = \"0x\";\n\n    for (var i = 0; i < value.length; i++) {\n      var v = value[i];\n      result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n    }\n\n    return result;\n  }\n\n  return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\n\nexport function hexDataLength(data) {\n  if (typeof data !== \"string\") {\n    data = hexlify(data);\n  } else if (!isHexString(data) || data.length % 2) {\n    return null;\n  }\n\n  return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n  if (typeof data !== \"string\") {\n    data = hexlify(data);\n  } else if (!isHexString(data) || data.length % 2) {\n    logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n  }\n\n  offset = 2 + 2 * offset;\n\n  if (endOffset != null) {\n    return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n  }\n\n  return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n  var result = \"0x\";\n  items.forEach(function (item) {\n    result += hexlify(item).substring(2);\n  });\n  return result;\n}\nexport function hexValue(value) {\n  var trimmed = hexStripZeros(hexlify(value, {\n    hexPad: \"left\"\n  }));\n\n  if (trimmed === \"0x\") {\n    return \"0x0\";\n  }\n\n  return trimmed;\n}\nexport function hexStripZeros(value) {\n  if (typeof value !== \"string\") {\n    value = hexlify(value);\n  }\n\n  if (!isHexString(value)) {\n    logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n  }\n\n  value = value.substring(2);\n  var offset = 0;\n\n  while (offset < value.length && value[offset] === \"0\") {\n    offset++;\n  }\n\n  return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n  if (typeof value !== \"string\") {\n    value = hexlify(value);\n  } else if (!isHexString(value)) {\n    logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n  }\n\n  if (value.length > 2 * length + 2) {\n    logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n  }\n\n  while (value.length < 2 * length + 2) {\n    value = \"0x0\" + value.substring(2);\n  }\n\n  return value;\n}\nexport function splitSignature(signature) {\n  var result = {\n    r: \"0x\",\n    s: \"0x\",\n    _vs: \"0x\",\n    recoveryParam: 0,\n    v: 0\n  };\n\n  if (isBytesLike(signature)) {\n    var bytes = arrayify(signature);\n\n    if (bytes.length !== 65) {\n      logger.throwArgumentError(\"invalid signature string; must be 65 bytes\", \"signature\", signature);\n    } // Get the r, s and v\n\n\n    result.r = hexlify(bytes.slice(0, 32));\n    result.s = hexlify(bytes.slice(32, 64));\n    result.v = bytes[64]; // Allow a recid to be used as the v\n\n    if (result.v < 27) {\n      if (result.v === 0 || result.v === 1) {\n        result.v += 27;\n      } else {\n        logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n      }\n    } // Compute recoveryParam from v\n\n\n    result.recoveryParam = 1 - result.v % 2; // Compute _vs from recoveryParam and s\n\n    if (result.recoveryParam) {\n      bytes[32] |= 0x80;\n    }\n\n    result._vs = hexlify(bytes.slice(32, 64));\n  } else {\n    result.r = signature.r;\n    result.s = signature.s;\n    result.v = signature.v;\n    result.recoveryParam = signature.recoveryParam;\n    result._vs = signature._vs; // If the _vs is available, use it to populate missing s, v and recoveryParam\n    // and verify non-missing s, v and recoveryParam\n\n    if (result._vs != null) {\n      var _vs2 = zeroPad(arrayify(result._vs), 32);\n\n      result._vs = hexlify(_vs2); // Set or check the recid\n\n      var recoveryParam = _vs2[0] >= 128 ? 1 : 0;\n\n      if (result.recoveryParam == null) {\n        result.recoveryParam = recoveryParam;\n      } else if (result.recoveryParam !== recoveryParam) {\n        logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n      } // Set or check the s\n\n\n      _vs2[0] &= 0x7f;\n      var s = hexlify(_vs2);\n\n      if (result.s == null) {\n        result.s = s;\n      } else if (result.s !== s) {\n        logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n      }\n    } // Use recid and v to populate each other\n\n\n    if (result.recoveryParam == null) {\n      if (result.v == null) {\n        logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n      } else {\n        result.recoveryParam = 1 - result.v % 2;\n      }\n    } else {\n      if (result.v == null) {\n        result.v = 27 + result.recoveryParam;\n      } else if (result.recoveryParam !== 1 - result.v % 2) {\n        logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n      }\n    }\n\n    if (result.r == null || !isHexString(result.r)) {\n      logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n    } else {\n      result.r = hexZeroPad(result.r, 32);\n    }\n\n    if (result.s == null || !isHexString(result.s)) {\n      logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n    } else {\n      result.s = hexZeroPad(result.s, 32);\n    }\n\n    var vs = arrayify(result.s);\n\n    if (vs[0] >= 128) {\n      logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n    }\n\n    if (result.recoveryParam) {\n      vs[0] |= 0x80;\n    }\n\n    var _vs = hexlify(vs);\n\n    if (result._vs) {\n      if (!isHexString(result._vs)) {\n        logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n      }\n\n      result._vs = hexZeroPad(result._vs, 32);\n    } // Set or check the _vs\n\n\n    if (result._vs == null) {\n      result._vs = _vs;\n    } else if (result._vs !== _vs) {\n      logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n    }\n  }\n\n  return result;\n}\nexport function joinSignature(signature) {\n  signature = splitSignature(signature);\n  return hexlify(concat([signature.r, signature.s, signature.recoveryParam ? \"0x1c\" : \"0x1b\"]));\n}","map":{"version":3,"mappings":"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","names":["Logger","version","logger","isHexable","value","toHexString","addSlice","array","slice","args","Array","prototype","call","arguments","Uint8Array","apply","isBytesLike","isHexString","length","isBytes","constructor","i","v","arrayify","options","checkSafeUint53","result","unshift","parseInt","String","push","allowMissingPrefix","substring","hex","hexPad","throwArgumentError","concat","items","objects","map","item","reduce","accum","offset","object","set","stripZeros","start","zeroPad","match","HexCharacters","hexlify","Math","floor","toLowerCase","hexDataLength","data","hexDataSlice","endOffset","hexConcat","forEach","hexValue","trimmed","hexStripZeros","hexZeroPad","splitSignature","signature","r","s","_vs","recoveryParam","bytes","vs","joinSignature"],"sourceRoot":"","sources":["../src.ts/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}