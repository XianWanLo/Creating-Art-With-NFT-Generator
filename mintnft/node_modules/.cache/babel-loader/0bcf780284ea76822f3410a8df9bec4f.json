{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"C:/Users/x7491/Creating-Art-With-NFT-Generator/mintnft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/x7491/Creating-Art-With-NFT-Generator/mintnft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { arrayify, hexZeroPad, isBytes } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\nimport { BigNumber, isBigNumberish } from \"./bignumber\";\nvar _constructorGuard = {};\nvar Zero = BigNumber.from(0);\nvar NegativeOne = BigNumber.from(-1);\n\nfunction throwFault(message, fault, operation, value) {\n  var params = {\n    fault: fault,\n    operation: operation\n  };\n\n  if (value !== undefined) {\n    params.value = value;\n  }\n\n  return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n} // Constant to pull zeros from for multipliers\n\n\nvar zeros = \"0\";\n\nwhile (zeros.length < 256) {\n  zeros += zeros;\n} // Returns a string \"1\" followed by decimal \"0\"s\n\n\nfunction getMultiplier(decimals) {\n  if (typeof decimals !== \"number\") {\n    try {\n      decimals = BigNumber.from(decimals).toNumber();\n    } catch (e) {}\n  }\n\n  if (typeof decimals === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n    return \"1\" + zeros.substring(0, decimals);\n  }\n\n  return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\n\nexport function formatFixed(value, decimals) {\n  if (decimals == null) {\n    decimals = 0;\n  }\n\n  var multiplier = getMultiplier(decimals); // Make sure wei is a big number (convert as necessary)\n\n  value = BigNumber.from(value);\n  var negative = value.lt(Zero);\n\n  if (negative) {\n    value = value.mul(NegativeOne);\n  }\n\n  var fraction = value.mod(multiplier).toString();\n\n  while (fraction.length < multiplier.length - 1) {\n    fraction = \"0\" + fraction;\n  } // Strip training 0\n\n\n  fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n  var whole = value.div(multiplier).toString();\n  value = whole + \".\" + fraction;\n\n  if (negative) {\n    value = \"-\" + value;\n  }\n\n  return value;\n}\nexport function parseFixed(value, decimals) {\n  if (decimals == null) {\n    decimals = 0;\n  }\n\n  var multiplier = getMultiplier(decimals);\n\n  if (typeof value !== \"string\" || !value.match(/^-?[0-9.,]+$/)) {\n    logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n  }\n\n  if (multiplier.length - 1 === 0) {\n    return BigNumber.from(value);\n  } // Is it negative?\n\n\n  var negative = value.substring(0, 1) === \"-\";\n\n  if (negative) {\n    value = value.substring(1);\n  }\n\n  if (value === \".\") {\n    logger.throwArgumentError(\"missing value\", \"value\", value);\n  } // Split it into a whole and fractional part\n\n\n  var comps = value.split(\".\");\n\n  if (comps.length > 2) {\n    logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n  }\n\n  var whole = comps[0],\n      fraction = comps[1];\n\n  if (!whole) {\n    whole = \"0\";\n  }\n\n  if (!fraction) {\n    fraction = \"0\";\n  } // Prevent underflow\n\n\n  if (fraction.length > multiplier.length - 1) {\n    throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n  } // Fully pad the string with zeros to get to wei\n\n\n  while (fraction.length < multiplier.length - 1) {\n    fraction += \"0\";\n  }\n\n  var wholeValue = BigNumber.from(whole);\n  var fractionValue = BigNumber.from(fraction);\n  var wei = wholeValue.mul(multiplier).add(fractionValue);\n\n  if (negative) {\n    wei = wei.mul(NegativeOne);\n  }\n\n  return wei;\n}\nexport var FixedFormat = /*#__PURE__*/function () {\n  function FixedFormat(constructorGuard, signed, width, decimals) {\n    _classCallCheck(this, FixedFormat);\n\n    if (constructorGuard !== _constructorGuard) {\n      logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"new FixedFormat\"\n      });\n    }\n\n    this.signed = signed;\n    this.width = width;\n    this.decimals = decimals;\n    this.name = (signed ? \"\" : \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n    this._multiplier = getMultiplier(decimals);\n    Object.freeze(this);\n  }\n\n  _createClass(FixedFormat, null, [{\n    key: \"from\",\n    value: function from(value) {\n      if (value instanceof FixedFormat) {\n        return value;\n      }\n\n      var signed = true;\n      var width = 128;\n      var decimals = 18;\n\n      if (typeof value === \"string\") {\n        if (value === \"fixed\") {// defaults...\n        } else if (value === \"ufixed\") {\n          signed = false;\n        } else if (value != null) {\n          var match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n\n          if (!match) {\n            logger.throwArgumentError(\"invalid fixed format\", \"format\", value);\n          }\n\n          signed = match[1] !== \"u\";\n          width = parseInt(match[2]);\n          decimals = parseInt(match[3]);\n        }\n      } else if (value) {\n        var check = function check(key, type, defaultValue) {\n          if (value[key] == null) {\n            return defaultValue;\n          }\n\n          if (typeof value[key] !== type) {\n            logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type + \")\", \"format.\" + key, value[key]);\n          }\n\n          return value[key];\n        };\n\n        signed = check(\"signed\", \"boolean\", signed);\n        width = check(\"width\", \"number\", width);\n        decimals = check(\"decimals\", \"number\", decimals);\n      }\n\n      if (width % 8) {\n        logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n      }\n\n      if (decimals > 80) {\n        logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n      }\n\n      return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n  }]);\n\n  return FixedFormat;\n}();\nexport var FixedNumber = /*#__PURE__*/function () {\n  function FixedNumber(constructorGuard, hex, value, format) {\n    _classCallCheck(this, FixedNumber);\n\n    logger.checkNew(this instanceof FixedNumber ? this.constructor : void 0, FixedNumber);\n\n    if (constructorGuard !== _constructorGuard) {\n      logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"new FixedFormat\"\n      });\n    }\n\n    this.format = format;\n    this._hex = hex;\n    this._value = value;\n    this._isFixedNumber = true;\n    Object.freeze(this);\n  }\n\n  _createClass(FixedNumber, [{\n    key: \"_checkFormat\",\n    value: function _checkFormat(other) {\n      if (this.format.name !== other.format.name) {\n        logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n      }\n    }\n  }, {\n    key: \"addUnsafe\",\n    value: function addUnsafe(other) {\n      this._checkFormat(other);\n\n      var a = parseFixed(this._value, this.format.decimals);\n      var b = parseFixed(other._value, other.format.decimals);\n      return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n  }, {\n    key: \"subUnsafe\",\n    value: function subUnsafe(other) {\n      this._checkFormat(other);\n\n      var a = parseFixed(this._value, this.format.decimals);\n      var b = parseFixed(other._value, other.format.decimals);\n      return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n  }, {\n    key: \"mulUnsafe\",\n    value: function mulUnsafe(other) {\n      this._checkFormat(other);\n\n      var a = parseFixed(this._value, this.format.decimals);\n      var b = parseFixed(other._value, other.format.decimals);\n      return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n  }, {\n    key: \"divUnsafe\",\n    value: function divUnsafe(other) {\n      this._checkFormat(other);\n\n      var a = parseFixed(this._value, this.format.decimals);\n      var b = parseFixed(other._value, other.format.decimals);\n      return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n  }, {\n    key: \"floor\",\n    value: function floor() {\n      var comps = this.toString().split(\".\");\n      var result = FixedNumber.from(comps[0], this.format);\n      var hasFraction = !comps[1].match(/^(0*)$/);\n\n      if (this.isNegative() && hasFraction) {\n        result = result.subUnsafe(ONE);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"ceiling\",\n    value: function ceiling() {\n      var comps = this.toString().split(\".\");\n      var result = FixedNumber.from(comps[0], this.format);\n      var hasFraction = !comps[1].match(/^(0*)$/);\n\n      if (!this.isNegative() && hasFraction) {\n        result = result.addUnsafe(ONE);\n      }\n\n      return result;\n    } // @TODO: Support other rounding algorithms\n\n  }, {\n    key: \"round\",\n    value: function round(decimals) {\n      if (decimals == null) {\n        decimals = 0;\n      } // If we are already in range, we're done\n\n\n      var comps = this.toString().split(\".\");\n\n      if (decimals < 0 || decimals > 80 || decimals % 1) {\n        logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n      }\n\n      if (comps[1].length <= decimals) {\n        return this;\n      }\n\n      var factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals));\n      return this.mulUnsafe(factor).addUnsafe(BUMP).floor().divUnsafe(factor);\n    }\n  }, {\n    key: \"isZero\",\n    value: function isZero() {\n      return this._value === \"0.0\";\n    }\n  }, {\n    key: \"isNegative\",\n    value: function isNegative() {\n      return this._value[0] === \"-\";\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this._value;\n    }\n  }, {\n    key: \"toHexString\",\n    value: function toHexString(width) {\n      if (width == null) {\n        return this._hex;\n      }\n\n      if (width % 8) {\n        logger.throwArgumentError(\"invalid byte width\", \"width\", width);\n      }\n\n      var hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n      return hexZeroPad(hex, width / 8);\n    }\n  }, {\n    key: \"toUnsafeFloat\",\n    value: function toUnsafeFloat() {\n      return parseFloat(this.toString());\n    }\n  }, {\n    key: \"toFormat\",\n    value: function toFormat(format) {\n      return FixedNumber.fromString(this._value, format);\n    }\n  }], [{\n    key: \"fromValue\",\n    value: function fromValue(value, decimals, format) {\n      // If decimals looks more like a format, and there is no format, shift the parameters\n      if (format == null && decimals != null && !isBigNumberish(decimals)) {\n        format = decimals;\n        decimals = null;\n      }\n\n      if (decimals == null) {\n        decimals = 0;\n      }\n\n      if (format == null) {\n        format = \"fixed\";\n      }\n\n      return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n  }, {\n    key: \"fromString\",\n    value: function fromString(value, format) {\n      if (format == null) {\n        format = \"fixed\";\n      }\n\n      var fixedFormat = FixedFormat.from(format);\n      var numeric = parseFixed(value, fixedFormat.decimals);\n\n      if (!fixedFormat.signed && numeric.lt(Zero)) {\n        throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n      }\n\n      var hex = null;\n\n      if (fixedFormat.signed) {\n        hex = numeric.toTwos(fixedFormat.width).toHexString();\n      } else {\n        hex = numeric.toHexString();\n        hex = hexZeroPad(hex, fixedFormat.width / 8);\n      }\n\n      var decimal = formatFixed(numeric, fixedFormat.decimals);\n      return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n  }, {\n    key: \"fromBytes\",\n    value: function fromBytes(value, format) {\n      if (format == null) {\n        format = \"fixed\";\n      }\n\n      var fixedFormat = FixedFormat.from(format);\n\n      if (arrayify(value).length > fixedFormat.width / 8) {\n        throw new Error(\"overflow\");\n      }\n\n      var numeric = BigNumber.from(value);\n\n      if (fixedFormat.signed) {\n        numeric = numeric.fromTwos(fixedFormat.width);\n      }\n\n      var hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();\n      var decimal = formatFixed(numeric, fixedFormat.decimals);\n      return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n  }, {\n    key: \"from\",\n    value: function from(value, format) {\n      if (typeof value === \"string\") {\n        return FixedNumber.fromString(value, format);\n      }\n\n      if (isBytes(value)) {\n        return FixedNumber.fromBytes(value, format);\n      }\n\n      try {\n        return FixedNumber.fromValue(value, 0, format);\n      } catch (error) {\n        // Allow NUMERIC_FAULT to bubble up\n        if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n          throw error;\n        }\n      }\n\n      return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n  }, {\n    key: \"isFixedNumber\",\n    value: function isFixedNumber(value) {\n      return !!(value && value._isFixedNumber);\n    }\n  }]);\n\n  return FixedNumber;\n}();\nvar ONE = FixedNumber.from(1);\nvar BUMP = FixedNumber.from(\"0.5\");","map":{"version":3,"mappings":"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","names":["arrayify","hexZeroPad","isBytes","Logger","version","logger","BigNumber","isBigNumberish","_constructorGuard","Zero","from","NegativeOne","throwFault","message","fault","operation","value","params","undefined","throwError","errors","NUMERIC_FAULT","zeros","length","getMultiplier","decimals","toNumber","e","substring","throwArgumentError","formatFixed","multiplier","negative","lt","mul","fraction","mod","toString","match","whole","div","parseFixed","comps","split","wholeValue","fractionValue","wei","add","FixedFormat","constructorGuard","signed","width","UNSUPPORTED_OPERATION","name","String","_multiplier","Object","freeze","parseInt","check","key","type","defaultValue","FixedNumber","hex","format","checkNew","_hex","_value","_isFixedNumber","other","_checkFormat","a","b","fromValue","sub","result","hasFraction","isNegative","subUnsafe","ONE","addUnsafe","factor","mulUnsafe","BUMP","floor","divUnsafe","fromTwos","toTwos","toHexString","parseFloat","fromString","fixedFormat","numeric","decimal","Error","fromBytes","error","code","INVALID_ARGUMENT"],"sourceRoot":"","sources":["../src.ts/fixednumber.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}