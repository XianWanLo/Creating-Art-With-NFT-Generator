{"ast":null,"code":"var _classCallCheck = require(\"C:/Users/x7491/Creating-Art-With-NFT-Generator/mintnft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/x7491/Creating-Art-With-NFT-Generator/mintnft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"C:/Users/x7491/Creating-Art-With-NFT-Generator/mintnft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/x7491/Creating-Art-With-NFT-Generator/mintnft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _require = require('stream'),\n    Transform = _require.Transform;\n\nmodule.exports = function (KeccakState) {\n  return /*#__PURE__*/function (_Transform) {\n    \"use strict\";\n\n    _inherits(Keccak, _Transform);\n\n    var _super = _createSuper(Keccak);\n\n    function Keccak(rate, capacity, delimitedSuffix, hashBitLength, options) {\n      var _this;\n\n      _classCallCheck(this, Keccak);\n\n      _this = _super.call(this, options);\n      _this._rate = rate;\n      _this._capacity = capacity;\n      _this._delimitedSuffix = delimitedSuffix;\n      _this._hashBitLength = hashBitLength;\n      _this._options = options;\n      _this._state = new KeccakState();\n\n      _this._state.initialize(rate, capacity);\n\n      _this._finalized = false;\n      return _this;\n    }\n\n    _createClass(Keccak, [{\n      key: \"_transform\",\n      value: function _transform(chunk, encoding, callback) {\n        var error = null;\n\n        try {\n          this.update(chunk, encoding);\n        } catch (err) {\n          error = err;\n        }\n\n        callback(error);\n      }\n    }, {\n      key: \"_flush\",\n      value: function _flush(callback) {\n        var error = null;\n\n        try {\n          this.push(this.digest());\n        } catch (err) {\n          error = err;\n        }\n\n        callback(error);\n      }\n    }, {\n      key: \"update\",\n      value: function update(data, encoding) {\n        if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer');\n        if (this._finalized) throw new Error('Digest already called');\n        if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding);\n\n        this._state.absorb(data);\n\n        return this;\n      }\n    }, {\n      key: \"digest\",\n      value: function digest(encoding) {\n        if (this._finalized) throw new Error('Digest already called');\n        this._finalized = true;\n        if (this._delimitedSuffix) this._state.absorbLastFewBits(this._delimitedSuffix);\n\n        var digest = this._state.squeeze(this._hashBitLength / 8);\n\n        if (encoding !== undefined) digest = digest.toString(encoding);\n\n        this._resetState();\n\n        return digest;\n      } // remove result from memory\n\n    }, {\n      key: \"_resetState\",\n      value: function _resetState() {\n        this._state.initialize(this._rate, this._capacity);\n\n        return this;\n      } // because sometimes we need hash right now and little later\n\n    }, {\n      key: \"_clone\",\n      value: function _clone() {\n        var clone = new Keccak(this._rate, this._capacity, this._delimitedSuffix, this._hashBitLength, this._options);\n\n        this._state.copy(clone._state);\n\n        clone._finalized = this._finalized;\n        return clone;\n      }\n    }]);\n\n    return Keccak;\n  }(Transform);\n};","map":{"version":3,"names":["require","Transform","module","exports","KeccakState","rate","capacity","delimitedSuffix","hashBitLength","options","_rate","_capacity","_delimitedSuffix","_hashBitLength","_options","_state","initialize","_finalized","chunk","encoding","callback","error","update","err","push","digest","data","Buffer","isBuffer","TypeError","Error","from","absorb","absorbLastFewBits","squeeze","undefined","toString","_resetState","clone","Keccak","copy"],"sources":["C:/Users/x7491/Creating-Art-With-NFT-Generator/mintnft/node_modules/keccak/lib/api/keccak.js"],"sourcesContent":["const { Transform } = require('stream')\n\nmodule.exports = (KeccakState) => class Keccak extends Transform {\n  constructor (rate, capacity, delimitedSuffix, hashBitLength, options) {\n    super(options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._hashBitLength = hashBitLength\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  _transform (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  _flush (callback) {\n    let error = null\n    try {\n      this.push(this.digest())\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  update (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Digest already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  digest (encoding) {\n    if (this._finalized) throw new Error('Digest already called')\n    this._finalized = true\n\n    if (this._delimitedSuffix) this._state.absorbLastFewBits(this._delimitedSuffix)\n    let digest = this._state.squeeze(this._hashBitLength / 8)\n    if (encoding !== undefined) digest = digest.toString(encoding)\n\n    this._resetState()\n\n    return digest\n  }\n\n  // remove result from memory\n  _resetState () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  // because sometimes we need hash right now and little later\n  _clone () {\n    const clone = new Keccak(this._rate, this._capacity, this._delimitedSuffix, this._hashBitLength, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}