{"ast":null,"code":"\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, hexDataSlice, hexlify, hexZeroPad, isBytesLike, splitSignature, stripZeros } from \"@ethersproject/bytes\";\nimport { Zero } from \"@ethersproject/constants\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { checkProperties } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey } from \"@ethersproject/signing-key\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version); ///////////////////////////////\n\nfunction handleAddress(value) {\n  if (value === \"0x\") {\n    return null;\n  }\n\n  return getAddress(value);\n}\n\nfunction handleNumber(value) {\n  if (value === \"0x\") {\n    return Zero;\n  }\n\n  return BigNumber.from(value);\n}\n\nvar transactionFields = [{\n  name: \"nonce\",\n  maxLength: 32,\n  numeric: true\n}, {\n  name: \"gasPrice\",\n  maxLength: 32,\n  numeric: true\n}, {\n  name: \"gasLimit\",\n  maxLength: 32,\n  numeric: true\n}, {\n  name: \"to\",\n  length: 20\n}, {\n  name: \"value\",\n  maxLength: 32,\n  numeric: true\n}, {\n  name: \"data\"\n}];\nvar allowedTransactionKeys = {\n  chainId: true,\n  data: true,\n  gasLimit: true,\n  gasPrice: true,\n  nonce: true,\n  to: true,\n  value: true\n};\nexport function computeAddress(key) {\n  var publicKey = computePublicKey(key);\n  return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\nexport function recoverAddress(digest, signature) {\n  return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\nexport function serialize(transaction, signature) {\n  checkProperties(transaction, allowedTransactionKeys);\n  var raw = [];\n  transactionFields.forEach(function (fieldInfo) {\n    var value = transaction[fieldInfo.name] || [];\n    var options = {};\n\n    if (fieldInfo.numeric) {\n      options.hexPad = \"left\";\n    }\n\n    value = arrayify(hexlify(value, options)); // Fixed-width field\n\n    if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n      logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, \"transaction:\" + fieldInfo.name, value);\n    } // Variable-width (with a maximum)\n\n\n    if (fieldInfo.maxLength) {\n      value = stripZeros(value);\n\n      if (value.length > fieldInfo.maxLength) {\n        logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, \"transaction:\" + fieldInfo.name, value);\n      }\n    }\n\n    raw.push(hexlify(value));\n  });\n  var chainId = 0;\n\n  if (transaction.chainId != null) {\n    // A chainId was provided; if non-zero we'll use EIP-155\n    chainId = transaction.chainId;\n\n    if (typeof chainId !== \"number\") {\n      logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n    }\n  } else if (signature && !isBytesLike(signature) && signature.v > 28) {\n    // No chainId provided, but the signature is signing with EIP-155; derive chainId\n    chainId = Math.floor((signature.v - 35) / 2);\n  } // We have an EIP-155 transaction (chainId was specified and non-zero)\n\n\n  if (chainId !== 0) {\n    raw.push(hexlify(chainId)); // @TODO: hexValue?\n\n    raw.push(\"0x\");\n    raw.push(\"0x\");\n  } // Requesting an unsigned transation\n\n\n  if (!signature) {\n    return RLP.encode(raw);\n  } // The splitSignature will ensure the transaction has a recoveryParam in the\n  // case that the signTransaction function only adds a v.\n\n\n  var sig = splitSignature(signature); // We pushed a chainId and null r, s on for hashing only; remove those\n\n  var v = 27 + sig.recoveryParam;\n\n  if (chainId !== 0) {\n    raw.pop();\n    raw.pop();\n    raw.pop();\n    v += chainId * 2 + 8; // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n\n    if (sig.v > 28 && sig.v !== v) {\n      logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n  } else if (sig.v !== v) {\n    logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n  }\n\n  raw.push(hexlify(v));\n  raw.push(stripZeros(arrayify(sig.r)));\n  raw.push(stripZeros(arrayify(sig.s)));\n  return RLP.encode(raw);\n}\nexport function parse(rawTransaction) {\n  var transaction = RLP.decode(rawTransaction);\n\n  if (transaction.length !== 9 && transaction.length !== 6) {\n    logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n  }\n\n  var tx = {\n    nonce: handleNumber(transaction[0]).toNumber(),\n    gasPrice: handleNumber(transaction[1]),\n    gasLimit: handleNumber(transaction[2]),\n    to: handleAddress(transaction[3]),\n    value: handleNumber(transaction[4]),\n    data: transaction[5],\n    chainId: 0\n  }; // Legacy unsigned transaction\n\n  if (transaction.length === 6) {\n    return tx;\n  }\n\n  try {\n    tx.v = BigNumber.from(transaction[6]).toNumber();\n  } catch (error) {\n    console.log(error);\n    return tx;\n  }\n\n  tx.r = hexZeroPad(transaction[7], 32);\n  tx.s = hexZeroPad(transaction[8], 32);\n\n  if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n    // EIP-155 unsigned transaction\n    tx.chainId = tx.v;\n    tx.v = 0;\n  } else {\n    // Signed Tranasaction\n    tx.chainId = Math.floor((tx.v - 35) / 2);\n\n    if (tx.chainId < 0) {\n      tx.chainId = 0;\n    }\n\n    var recoveryParam = tx.v - 27;\n    var raw = transaction.slice(0, 6);\n\n    if (tx.chainId !== 0) {\n      raw.push(hexlify(tx.chainId));\n      raw.push(\"0x\");\n      raw.push(\"0x\");\n      recoveryParam -= tx.chainId * 2 + 8;\n    }\n\n    var digest = keccak256(RLP.encode(raw));\n\n    try {\n      tx.from = recoverAddress(digest, {\n        r: hexlify(tx.r),\n        s: hexlify(tx.s),\n        recoveryParam: recoveryParam\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    tx.hash = keccak256(rawTransaction);\n  }\n\n  return tx;\n}","map":{"version":3,"mappings":"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","names":["getAddress","BigNumber","arrayify","hexDataSlice","hexlify","hexZeroPad","isBytesLike","splitSignature","stripZeros","Zero","keccak256","checkProperties","RLP","computePublicKey","recoverPublicKey","Logger","version","logger","handleAddress","value","handleNumber","from","transactionFields","name","maxLength","numeric","length","allowedTransactionKeys","chainId","data","gasLimit","gasPrice","nonce","to","computeAddress","key","publicKey","recoverAddress","digest","signature","serialize","transaction","raw","forEach","fieldInfo","options","hexPad","throwArgumentError","push","v","Math","floor","encode","sig","recoveryParam","pop","r","s","parse","rawTransaction","decode","tx","toNumber","error","console","log","isZero","slice","hash"],"sourceRoot":"","sources":["../src.ts/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}