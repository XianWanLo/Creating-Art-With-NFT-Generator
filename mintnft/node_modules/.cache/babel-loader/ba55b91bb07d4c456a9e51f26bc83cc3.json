{"ast":null,"code":"var _classCallCheck = require(\"C:/Users/x7491/Creating-Art-With-NFT-Generator/mintnft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/x7491/Creating-Art-With-NFT-Generator/mintnft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"C:/Users/x7491/Creating-Art-With-NFT-Generator/mintnft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/x7491/Creating-Art-With-NFT-Generator/mintnft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _require = require('stream'),\n    Transform = _require.Transform;\n\nmodule.exports = function (KeccakState) {\n  return /*#__PURE__*/function (_Transform) {\n    \"use strict\";\n\n    _inherits(Shake, _Transform);\n\n    var _super = _createSuper(Shake);\n\n    function Shake(rate, capacity, delimitedSuffix, options) {\n      var _this;\n\n      _classCallCheck(this, Shake);\n\n      _this = _super.call(this, options);\n      _this._rate = rate;\n      _this._capacity = capacity;\n      _this._delimitedSuffix = delimitedSuffix;\n      _this._options = options;\n      _this._state = new KeccakState();\n\n      _this._state.initialize(rate, capacity);\n\n      _this._finalized = false;\n      return _this;\n    }\n\n    _createClass(Shake, [{\n      key: \"_transform\",\n      value: function _transform(chunk, encoding, callback) {\n        var error = null;\n\n        try {\n          this.update(chunk, encoding);\n        } catch (err) {\n          error = err;\n        }\n\n        callback(error);\n      }\n    }, {\n      key: \"_flush\",\n      value: function _flush() {}\n    }, {\n      key: \"_read\",\n      value: function _read(size) {\n        this.push(this.squeeze(size));\n      }\n    }, {\n      key: \"update\",\n      value: function update(data, encoding) {\n        if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer');\n        if (this._finalized) throw new Error('Squeeze already called');\n        if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding);\n\n        this._state.absorb(data);\n\n        return this;\n      }\n    }, {\n      key: \"squeeze\",\n      value: function squeeze(dataByteLength, encoding) {\n        if (!this._finalized) {\n          this._finalized = true;\n\n          this._state.absorbLastFewBits(this._delimitedSuffix);\n        }\n\n        var data = this._state.squeeze(dataByteLength);\n\n        if (encoding !== undefined) data = data.toString(encoding);\n        return data;\n      }\n    }, {\n      key: \"_resetState\",\n      value: function _resetState() {\n        this._state.initialize(this._rate, this._capacity);\n\n        return this;\n      }\n    }, {\n      key: \"_clone\",\n      value: function _clone() {\n        var clone = new Shake(this._rate, this._capacity, this._delimitedSuffix, this._options);\n\n        this._state.copy(clone._state);\n\n        clone._finalized = this._finalized;\n        return clone;\n      }\n    }]);\n\n    return Shake;\n  }(Transform);\n};","map":{"version":3,"names":["require","Transform","module","exports","KeccakState","rate","capacity","delimitedSuffix","options","_rate","_capacity","_delimitedSuffix","_options","_state","initialize","_finalized","chunk","encoding","callback","error","update","err","size","push","squeeze","data","Buffer","isBuffer","TypeError","Error","from","absorb","dataByteLength","absorbLastFewBits","undefined","toString","clone","Shake","copy"],"sources":["C:/Users/x7491/Creating-Art-With-NFT-Generator/mintnft/node_modules/keccak/lib/api/shake.js"],"sourcesContent":["const { Transform } = require('stream')\n\nmodule.exports = (KeccakState) => class Shake extends Transform {\n  constructor (rate, capacity, delimitedSuffix, options) {\n    super(options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  _transform (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  _flush () {}\n\n  _read (size) {\n    this.push(this.squeeze(size))\n  }\n\n  update (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Squeeze already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  squeeze (dataByteLength, encoding) {\n    if (!this._finalized) {\n      this._finalized = true\n      this._state.absorbLastFewBits(this._delimitedSuffix)\n    }\n\n    let data = this._state.squeeze(dataByteLength)\n    if (encoding !== undefined) data = data.toString(encoding)\n\n    return data\n  }\n\n  _resetState () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  _clone () {\n    const clone = new Shake(this._rate, this._capacity, this._delimitedSuffix, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n}\n"],"mappings":";;;;;;;;eAAsBA,OAAO,CAAC,QAAD,C;IAArBC,S,YAAAA,S;;AAERC,MAAM,CAACC,OAAP,GAAiB,UAACC,WAAD;EAAA;IAAA;;IAAA;;IAAA;;IACf,eAAaC,IAAb,EAAmBC,QAAnB,EAA6BC,eAA7B,EAA8CC,OAA9C,EAAuD;MAAA;;MAAA;;MACrD,0BAAMA,OAAN;MAEA,MAAKC,KAAL,GAAaJ,IAAb;MACA,MAAKK,SAAL,GAAiBJ,QAAjB;MACA,MAAKK,gBAAL,GAAwBJ,eAAxB;MACA,MAAKK,QAAL,GAAgBJ,OAAhB;MAEA,MAAKK,MAAL,GAAc,IAAIT,WAAJ,EAAd;;MACA,MAAKS,MAAL,CAAYC,UAAZ,CAAuBT,IAAvB,EAA6BC,QAA7B;;MACA,MAAKS,UAAL,GAAkB,KAAlB;MAVqD;IAWtD;;IAZc;MAAA;MAAA,OAcf,oBAAYC,KAAZ,EAAmBC,QAAnB,EAA6BC,QAA7B,EAAuC;QACrC,IAAIC,KAAK,GAAG,IAAZ;;QACA,IAAI;UACF,KAAKC,MAAL,CAAYJ,KAAZ,EAAmBC,QAAnB;QACD,CAFD,CAEE,OAAOI,GAAP,EAAY;UACZF,KAAK,GAAGE,GAAR;QACD;;QAEDH,QAAQ,CAACC,KAAD,CAAR;MACD;IAvBc;MAAA;MAAA,OAyBf,kBAAU,CAAE;IAzBG;MAAA;MAAA,OA2Bf,eAAOG,IAAP,EAAa;QACX,KAAKC,IAAL,CAAU,KAAKC,OAAL,CAAaF,IAAb,CAAV;MACD;IA7Bc;MAAA;MAAA,OA+Bf,gBAAQG,IAAR,EAAcR,QAAd,EAAwB;QACtB,IAAI,CAACS,MAAM,CAACC,QAAP,CAAgBF,IAAhB,CAAD,IAA0B,OAAOA,IAAP,KAAgB,QAA9C,EAAwD,MAAM,IAAIG,SAAJ,CAAc,mCAAd,CAAN;QACxD,IAAI,KAAKb,UAAT,EAAqB,MAAM,IAAIc,KAAJ,CAAU,wBAAV,CAAN;QACrB,IAAI,CAACH,MAAM,CAACC,QAAP,CAAgBF,IAAhB,CAAL,EAA4BA,IAAI,GAAGC,MAAM,CAACI,IAAP,CAAYL,IAAZ,EAAkBR,QAAlB,CAAP;;QAE5B,KAAKJ,MAAL,CAAYkB,MAAZ,CAAmBN,IAAnB;;QAEA,OAAO,IAAP;MACD;IAvCc;MAAA;MAAA,OAyCf,iBAASO,cAAT,EAAyBf,QAAzB,EAAmC;QACjC,IAAI,CAAC,KAAKF,UAAV,EAAsB;UACpB,KAAKA,UAAL,GAAkB,IAAlB;;UACA,KAAKF,MAAL,CAAYoB,iBAAZ,CAA8B,KAAKtB,gBAAnC;QACD;;QAED,IAAIc,IAAI,GAAG,KAAKZ,MAAL,CAAYW,OAAZ,CAAoBQ,cAApB,CAAX;;QACA,IAAIf,QAAQ,KAAKiB,SAAjB,EAA4BT,IAAI,GAAGA,IAAI,CAACU,QAAL,CAAclB,QAAd,CAAP;QAE5B,OAAOQ,IAAP;MACD;IAnDc;MAAA;MAAA,OAqDf,uBAAe;QACb,KAAKZ,MAAL,CAAYC,UAAZ,CAAuB,KAAKL,KAA5B,EAAmC,KAAKC,SAAxC;;QACA,OAAO,IAAP;MACD;IAxDc;MAAA;MAAA,OA0Df,kBAAU;QACR,IAAM0B,KAAK,GAAG,IAAIC,KAAJ,CAAU,KAAK5B,KAAf,EAAsB,KAAKC,SAA3B,EAAsC,KAAKC,gBAA3C,EAA6D,KAAKC,QAAlE,CAAd;;QACA,KAAKC,MAAL,CAAYyB,IAAZ,CAAiBF,KAAK,CAACvB,MAAvB;;QACAuB,KAAK,CAACrB,UAAN,GAAmB,KAAKA,UAAxB;QAEA,OAAOqB,KAAP;MACD;IAhEc;;IAAA;EAAA,EAAqCnC,SAArC;AAAA,CAAjB"},"metadata":{},"sourceType":"script"}