{"ast":null,"code":"import BN from 'bn.js';\nimport hash from 'hash.js';\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, basedir, module) {\n  return module = {\n    path: basedir,\n    exports: {},\n    require: function require(path, base) {\n      return commonjsRequire(path, base === undefined || base === null ? module.path : base);\n    }\n  }, fn(module, module.exports), module.exports;\n}\n\nfunction getDefaultExportFromNamespaceIfPresent(n) {\n  return n && Object.prototype.hasOwnProperty.call(n, 'default') ? n['default'] : n;\n}\n\nfunction getDefaultExportFromNamespaceIfNotNamed(n) {\n  return n && Object.prototype.hasOwnProperty.call(n, 'default') && Object.keys(n).length === 1 ? n['default'] : n;\n}\n\nfunction getAugmentedNamespace(n) {\n  if (n.__esModule) return n;\n  var a = Object.defineProperty({}, '__esModule', {\n    value: true\n  });\n  Object.keys(n).forEach(function (k) {\n    var d = Object.getOwnPropertyDescriptor(n, k);\n    Object.defineProperty(a, k, d.get ? d : {\n      enumerable: true,\n      get: function get() {\n        return n[k];\n      }\n    });\n  });\n  return a;\n}\n\nfunction commonjsRequire() {\n  throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar minimalisticAssert = assert;\n\nfunction assert(val, msg) {\n  if (!val) throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r) throw new Error(msg || 'Assertion failed: ' + l + ' != ' + r);\n};\n\nvar utils_1 = createCommonjsModule(function (module, exports) {\n  'use strict';\n\n  var utils = exports;\n\n  function toArray(msg, enc) {\n    if (Array.isArray(msg)) return msg.slice();\n    if (!msg) return [];\n    var res = [];\n\n    if (typeof msg !== 'string') {\n      for (var i = 0; i < msg.length; i++) {\n        res[i] = msg[i] | 0;\n      }\n\n      return res;\n    }\n\n    if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0) msg = '0' + msg;\n\n      for (var i = 0; i < msg.length; i += 2) {\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n      }\n    } else {\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        var hi = c >> 8;\n        var lo = c & 0xff;\n        if (hi) res.push(hi, lo);else res.push(lo);\n      }\n    }\n\n    return res;\n  }\n\n  utils.toArray = toArray;\n\n  function zero2(word) {\n    if (word.length === 1) return '0' + word;else return word;\n  }\n\n  utils.zero2 = zero2;\n\n  function toHex(msg) {\n    var res = '';\n\n    for (var i = 0; i < msg.length; i++) {\n      res += zero2(msg[i].toString(16));\n    }\n\n    return res;\n  }\n\n  utils.toHex = toHex;\n\n  utils.encode = function encode(arr, enc) {\n    if (enc === 'hex') return toHex(arr);else return arr;\n  };\n});\nvar utils_1$1 = createCommonjsModule(function (module, exports) {\n  'use strict';\n\n  var utils = exports;\n  utils.assert = minimalisticAssert;\n  utils.toArray = utils_1.toArray;\n  utils.zero2 = utils_1.zero2;\n  utils.toHex = utils_1.toHex;\n  utils.encode = utils_1.encode; // Represent num in a w-NAF form\n\n  function getNAF(num, w, bits) {\n    var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n    naf.fill(0);\n    var ws = 1 << w + 1;\n    var k = num.clone();\n\n    for (var i = 0; i < naf.length; i++) {\n      var z;\n      var mod = k.andln(ws - 1);\n\n      if (k.isOdd()) {\n        if (mod > (ws >> 1) - 1) z = (ws >> 1) - mod;else z = mod;\n        k.isubn(z);\n      } else {\n        z = 0;\n      }\n\n      naf[i] = z;\n      k.iushrn(1);\n    }\n\n    return naf;\n  }\n\n  utils.getNAF = getNAF; // Represent k1, k2 in a Joint Sparse Form\n\n  function getJSF(k1, k2) {\n    var jsf = [[], []];\n    k1 = k1.clone();\n    k2 = k2.clone();\n    var d1 = 0;\n    var d2 = 0;\n    var m8;\n\n    while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n      // First phase\n      var m14 = k1.andln(3) + d1 & 3;\n      var m24 = k2.andln(3) + d2 & 3;\n      if (m14 === 3) m14 = -1;\n      if (m24 === 3) m24 = -1;\n      var u1;\n\n      if ((m14 & 1) === 0) {\n        u1 = 0;\n      } else {\n        m8 = k1.andln(7) + d1 & 7;\n        if ((m8 === 3 || m8 === 5) && m24 === 2) u1 = -m14;else u1 = m14;\n      }\n\n      jsf[0].push(u1);\n      var u2;\n\n      if ((m24 & 1) === 0) {\n        u2 = 0;\n      } else {\n        m8 = k2.andln(7) + d2 & 7;\n        if ((m8 === 3 || m8 === 5) && m14 === 2) u2 = -m24;else u2 = m24;\n      }\n\n      jsf[1].push(u2); // Second phase\n\n      if (2 * d1 === u1 + 1) d1 = 1 - d1;\n      if (2 * d2 === u2 + 1) d2 = 1 - d2;\n      k1.iushrn(1);\n      k2.iushrn(1);\n    }\n\n    return jsf;\n  }\n\n  utils.getJSF = getJSF;\n\n  function cachedProperty(obj, name, computer) {\n    var key = '_' + name;\n\n    obj.prototype[name] = function cachedProperty() {\n      return this[key] !== undefined ? this[key] : this[key] = computer.call(this);\n    };\n  }\n\n  utils.cachedProperty = cachedProperty;\n\n  function parseBytes(bytes) {\n    return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') : bytes;\n  }\n\n  utils.parseBytes = parseBytes;\n\n  function intFromLE(bytes) {\n    return new BN(bytes, 'hex', 'le');\n  }\n\n  utils.intFromLE = intFromLE;\n});\n'use strict';\n\nvar getNAF = utils_1$1.getNAF;\nvar getJSF = utils_1$1.getJSF;\nvar assert$1 = utils_1$1.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16); // Use Montgomery, when there is no fast reduction for the prime\n\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p); // Useful for many curves\n\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red); // Curve configuration, optional\n\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed); // Temporary arrays\n\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n  this._bitLength = this.n ? this.n.bitLength() : 0; // Generalized Greg Maxwell's trick\n\n  var adjustCount = this.n && this.p.div(this.n);\n\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\n\nvar base = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert$1(p.precomputed);\n\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3; // Translate into more windowed form\n\n  var repr = [];\n  var j;\n  var nafW;\n\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n\n    for (var l = j + doubles.step - 1; l >= j; l--) {\n      nafW = (nafW << 1) + naf[l];\n    }\n\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i) b = b.mixedAdd(doubles.points[j]);else if (nafW === -i) b = b.mixedAdd(doubles.points[j].neg());\n    }\n\n    a = a.add(b);\n  }\n\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4; // Precompute window\n\n  var nafPoints = p._getNAFPoints(w);\n\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points; // Get NAF form\n\n  var naf = getNAF(k, w, this._bitLength); // Add `this`*(N+1) for every w-NAF index\n\n  var acc = this.jpoint(null, null, null);\n\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--) {\n      l++;\n    }\n\n    if (i >= 0) l++;\n    acc = acc.dblp(l);\n    if (i < 0) break;\n    var z = naf[i];\n    assert$1(z !== 0);\n\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0) acc = acc.mixedAdd(wnd[z - 1 >> 1]);else acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0) acc = acc.add(wnd[z - 1 >> 1]);else acc = acc.add(wnd[-z - 1 >> 1].neg());\n    }\n  }\n\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3; // Fill all arrays\n\n  var max = 0;\n  var i;\n  var j;\n  var p;\n\n  for (i = 0; i < len; i++) {\n    p = points[i];\n\n    var nafPoints = p._getNAFPoints(defW);\n\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  } // Comb small window NAFs\n\n\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [points[a],\n    /* 1 */\n    null,\n    /* 3 */\n    null,\n    /* 5 */\n    points[b]\n    /* 7 */\n    ]; // Try to avoid Projective points, if possible\n\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [-3,\n    /* -1 -1 */\n    -1,\n    /* -1 0 */\n    -5,\n    /* -1 1 */\n    -7,\n    /* 0 -1 */\n    0,\n    /* 0 0 */\n    7,\n    /* 0 1 */\n    5,\n    /* 1 -1 */\n    1,\n    /* 1 0 */\n    3\n    /* 1 1 */\n    ];\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0) zero = false;\n      }\n\n      if (!zero) break;\n      k++;\n      i--;\n    }\n\n    if (i >= 0) k++;\n    acc = acc.dblp(k);\n    if (i < 0) break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0) continue;else if (z > 0) p = wnd[j][z - 1 >> 1];else if (z < 0) p = wnd[j][-z - 1 >> 1].neg();\n      if (p.type === 'affine') acc = acc.mixedAdd(p);else acc = acc.add(p);\n    }\n  } // Zeroify references\n\n\n  for (i = 0; i < len; i++) {\n    wnd[i] = null;\n  }\n\n  if (jacobianResult) return acc;else return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\n\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function\n  /*other*/\neq() {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils_1$1.toArray(bytes, enc);\n  var len = this.p.byteLength(); // uncompressed, hybrid-odd, hybrid-even\n\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) && bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06) assert$1(bytes[bytes.length - 1] % 2 === 0);else if (bytes[0] === 0x07) assert$1(bytes[bytes.length - 1] % 2 === 1);\n    var res = this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) && bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n  if (compact) return [this.getY().isEven() ? 0x02 : 0x03].concat(x);\n  return [0x04].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils_1$1.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed) return this;\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed) return false;\n  var doubles = this.precomputed.doubles;\n  if (!doubles) return false;\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;\n  var doubles = [this];\n  var acc = this;\n\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++) {\n      acc = acc.dbl();\n    }\n\n    doubles.push(acc);\n  }\n\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;\n  var res = [this];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n\n  for (var i = 1; i < max; i++) {\n    res[i] = res[i - 1].add(dbl);\n  }\n\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n\n  for (var i = 0; i < k; i++) {\n    r = r.dbl();\n  }\n\n  return r;\n};\n\nvar inherits_browser = createCommonjsModule(function (module) {\n  if (typeof Object.create === 'function') {\n    // implementation from standard node.js 'util' module\n    module.exports = function inherits(ctor, superCtor) {\n      if (superCtor) {\n        ctor.super_ = superCtor;\n        ctor.prototype = Object.create(superCtor.prototype, {\n          constructor: {\n            value: ctor,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n      }\n    };\n  } else {\n    // old school shim for old browsers\n    module.exports = function inherits(ctor, superCtor) {\n      if (superCtor) {\n        ctor.super_ = superCtor;\n\n        var TempCtor = function TempCtor() {};\n\n        TempCtor.prototype = superCtor.prototype;\n        ctor.prototype = new TempCtor();\n        ctor.prototype.constructor = ctor;\n      }\n    };\n  }\n});\n'use strict';\n\nvar assert$2 = utils_1$1.assert;\n\nfunction ShortCurve(conf) {\n  base.call(this, 'short', conf);\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0; // If the curve is endomorphic, precalculate beta and lambda\n\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\n\ninherits_browser(ShortCurve, base);\nvar short_1 = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1) return; // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n\n  var beta;\n  var lambda;\n\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p); // Choose the smallest beta\n\n\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert$2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  } // Get basis vectors, used for balanced length-two representation\n\n\n  var basis;\n\n  if (conf.basis) {\n    basis = conf.basis.map(function (vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [l1, l2];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2)); // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1); // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n\n  var a0;\n  var b0; // First vector\n\n  var a1;\n  var b1; // Second vector\n\n  var a2;\n  var b2;\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n\n    prevR = r;\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n\n  a2 = r.neg();\n  b2 = x;\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  } // Normalize signs\n\n\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [{\n    a: a1,\n    b: b1\n  }, {\n    a: a2,\n    b: b2\n  }];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b); // Calculate answer\n\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return {\n    k1: k1,\n    k2: k2\n  };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red) x = x.toRed(this.red);\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0) throw new Error('invalid point'); // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf) return true;\n  var x = point.x;\n  var y = point.y;\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n\n    var p = points[i];\n\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult); // Clean-up references to points and coefficients\n\n\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  base.BasePoint.call(this, curve, 'affine');\n\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16); // Force redgomery representation when loading from JSON\n\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n\n    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\n\ninherits_browser(Point, base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo) return;\n  var pre = this.precomputed;\n  if (pre && pre.beta) return pre.beta;\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n\n  if (pre) {\n    var curve = this.curve;\n\n    var endoMul = function endoMul(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed) return [this.x, this.y];\n  return [this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  }];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string') obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2]) return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [res].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [res].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf) return p; // P + O = P\n\n  if (p.inf) return this; // P + P = 2P\n\n  if (this.eq(p)) return this.dbl(); // P + (-P) = O\n\n  if (this.neg().eq(p)) return this.curve.point(null, null); // P + Q = O\n\n  if (this.x.cmp(p.x) === 0) return this.curve.point(null, null);\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0) c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf) return this; // 2P = O\n\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0) return this.curve.point(null, null);\n  var a = this.curve.a;\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity()) return this;else if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);else if (this.curve.endo) return this.curve._endoWnafMulAdd([this], [k]);else return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [this, p2];\n  var coeffs = [k1, k2];\n  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs);else return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [this, p2];\n  var coeffs = [k1, k2];\n  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs, true);else return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf) return this;\n  var res = this.curve.point(this.x, this.y.redNeg());\n\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n\n    var negate = function negate(p) {\n      return p.neg();\n    };\n\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf) return this.curve.jpoint(null, null, null);\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  base.BasePoint.call(this, curve, 'jacobian');\n\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n\n  if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n  this.zOne = this.z === this.curve.one;\n}\n\ninherits_browser(JPoint, base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity()) return this.curve.point(null, null);\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity()) return p; // P + O = P\n\n  if (p.isInfinity()) return this; // 12M + 4S + 7A\n\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity()) return p.toJ(); // P + O = P\n\n  if (p.isInfinity()) return this; // 8M + 3S + 7A\n\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0) return this;\n  if (this.isInfinity()) return this;\n  if (!pow) return this.dbl();\n  var i;\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n\n    for (i = 0; i < pow; i++) {\n      r = r.dbl();\n    }\n\n    return r;\n  } // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n\n\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr(); // Reuse results\n\n  var jyd = jy.redAdd(jy);\n\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow) jz4 = jz4.redMul(jyd4);\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity()) return this;\n  if (this.curve.zeroA) return this._zeroDbl();else if (this.curve.threeA) return this._threeDbl();else return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz; // Z = 1\n\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n    // XX = X1^2\n    var xx = this.x.redSqr(); // YY = Y1^2\n\n    var yy = this.y.redSqr(); // YYYY = YY^2\n\n    var yyyy = yy.redSqr(); // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s); // M = 3 * XX + a; a = 0\n\n    var m = xx.redAdd(xx).redIAdd(xx); // T = M ^ 2 - 2*S\n\n    var t = m.redSqr().redISub(s).redISub(s); // 8 * YYYY\n\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8); // X3 = T\n\n    nx = t; // Y3 = M * (S - T) - 8 * YYYY\n\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8); // Z3 = 2*Y1\n\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n    // A = X1^2\n    var a = this.x.redSqr(); // B = Y1^2\n\n    var b = this.y.redSqr(); // C = B^2\n\n    var c = b.redSqr(); // D = 2 * ((X1 + B)^2 - A - C)\n\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d); // E = 3 * A\n\n    var e = a.redAdd(a).redIAdd(a); // F = E^2\n\n    var f = e.redSqr(); // 8 * C\n\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8); // X3 = F - 2 * D\n\n    nx = f.redISub(d).redISub(d); // Y3 = E * (D - X3) - 8 * C\n\n    ny = e.redMul(d.redISub(nx)).redISub(c8); // Z3 = 2 * Y1 * Z1\n\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz; // Z = 1\n\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n    // XX = X1^2\n    var xx = this.x.redSqr(); // YY = Y1^2\n\n    var yy = this.y.redSqr(); // YYYY = YY^2\n\n    var yyyy = yy.redSqr(); // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s); // M = 3 * XX + a\n\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a); // T = M^2 - 2 * S\n\n    var t = m.redSqr().redISub(s).redISub(s); // X3 = T\n\n    nx = t; // Y3 = M * (S - T) - 8 * YYYY\n\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8); // Z3 = 2 * Y1\n\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n    // delta = Z1^2\n    var delta = this.z.redSqr(); // gamma = Y1^2\n\n    var gamma = this.y.redSqr(); // beta = X1 * gamma\n\n    var beta = this.x.redMul(gamma); // alpha = 3 * (X1 - delta) * (X1 + delta)\n\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha); // X3 = alpha^2 - 8 * beta\n\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8); // Z3 = (Y1 + Z1)^2 - gamma - delta\n\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta); // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a; // 4M + 6S + 10A\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA) return this.dbl().add(this); // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n  // XX = X1^2\n\n  var xx = this.x.redSqr(); // YY = Y1^2\n\n  var yy = this.y.redSqr(); // ZZ = Z1^2\n\n  var zz = this.z.redSqr(); // YYYY = YY^2\n\n  var yyyy = yy.redSqr(); // M = 3 * XX + a * ZZ2; a = 0\n\n  var m = xx.redAdd(xx).redIAdd(xx); // MM = M^2\n\n  var mm = m.redSqr(); // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm); // EE = E^2\n\n  var ee = e.redSqr(); // T = 16*YYYY\n\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t); // U = (M + E)^2 - MM - EE - T\n\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t); // X3 = 4 * (X1 * EE - 4 * YY * U)\n\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx); // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny); // Z3 = (Z1 + E)^2 - ZZ - EE\n\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine') return this.eq(p.toJ());\n  if (this === p) return true; // x1 * z2^2 == x2 * z1^2\n\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0) return false; // y1 * z2^3 == y2 * z1^3\n\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0) return true;\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0) return false;\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0) return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) + ' y: ' + this.y.toString(16, 2) + ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nvar curve_1 = createCommonjsModule(function (module, exports) {\n  'use strict';\n\n  var curve = exports;\n  curve.base = base;\n  curve.short = short_1;\n  curve.mont =\n  /*RicMoo:ethers:require(./mont)*/\n  null;\n  curve.edwards =\n  /*RicMoo:ethers:require(./edwards)*/\n  null;\n});\nvar curves_1 = createCommonjsModule(function (module, exports) {\n  'use strict';\n\n  var curves = exports;\n  var assert = utils_1$1.assert;\n\n  function PresetCurve(options) {\n    if (options.type === 'short') this.curve = new curve_1.short(options);else if (options.type === 'edwards') this.curve = new curve_1.edwards(options);else this.curve = new curve_1.mont(options);\n    this.g = this.curve.g;\n    this.n = this.curve.n;\n    this.hash = options.hash;\n    assert(this.g.validate(), 'Invalid curve');\n    assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n  }\n\n  curves.PresetCurve = PresetCurve;\n\n  function defineCurve(name, options) {\n    Object.defineProperty(curves, name, {\n      configurable: true,\n      enumerable: true,\n      get: function get() {\n        var curve = new PresetCurve(options);\n        Object.defineProperty(curves, name, {\n          configurable: true,\n          enumerable: true,\n          value: curve\n        });\n        return curve;\n      }\n    });\n  }\n\n  defineCurve('p192', {\n    type: 'short',\n    prime: 'p192',\n    p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n    a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n    b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n    n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n    hash: hash.sha256,\n    gRed: false,\n    g: ['188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012', '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811']\n  });\n  defineCurve('p224', {\n    type: 'short',\n    prime: 'p224',\n    p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n    a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n    b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n    n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n    hash: hash.sha256,\n    gRed: false,\n    g: ['b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21', 'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34']\n  });\n  defineCurve('p256', {\n    type: 'short',\n    prime: null,\n    p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n    a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n    b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n    n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n    hash: hash.sha256,\n    gRed: false,\n    g: ['6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296', '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5']\n  });\n  defineCurve('p384', {\n    type: 'short',\n    prime: null,\n    p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 ffffffff',\n    a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 fffffffc',\n    b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' + '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n    n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' + 'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n    hash: hash.sha384,\n    gRed: false,\n    g: ['aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' + '5502f25d bf55296c 3a545e38 72760ab7', '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' + '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f']\n  });\n  defineCurve('p521', {\n    type: 'short',\n    prime: null,\n    p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff',\n    a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff fffffffc',\n    b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' + '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' + '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n    n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' + 'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n    hash: hash.sha512,\n    gRed: false,\n    g: ['000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' + '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' + 'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66', '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' + '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' + '3fad0761 353c7086 a272c240 88be9476 9fd16650']\n  });\n  defineCurve('curve25519', {\n    type: 'mont',\n    prime: 'p25519',\n    p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n    a: '76d06',\n    b: '1',\n    n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n    hash: hash.sha256,\n    gRed: false,\n    g: ['9']\n  });\n  defineCurve('ed25519', {\n    type: 'edwards',\n    prime: 'p25519',\n    p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n    a: '-1',\n    c: '1',\n    // -121665 * (121666^(-1)) (mod P)\n    d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n    n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n    hash: hash.sha256,\n    gRed: false,\n    g: ['216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a', // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658']\n  });\n  var pre;\n\n  try {\n    pre =\n    /*RicMoo:ethers:require(./precomputed/secp256k1)*/\n    null.crash();\n  } catch (e) {\n    pre = undefined;\n  }\n\n  defineCurve('secp256k1', {\n    type: 'short',\n    prime: 'k256',\n    p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n    a: '0',\n    b: '7',\n    n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n    h: '1',\n    hash: hash.sha256,\n    // Precomputed endomorphism\n    beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n    lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n    basis: [{\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3'\n    }, {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15'\n    }],\n    gRed: false,\n    g: ['79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798', '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8', pre]\n  });\n});\n'use strict';\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG)) return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n  var entropy = utils_1.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils_1.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils_1.toArray(options.pers, options.persEnc || 'hex');\n  minimalisticAssert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._init(entropy, nonce, pers);\n}\n\nvar hmacDrbg = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000; // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac().update(this.V).update([0x00]);\n\n  if (seed) kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed) return;\n  this.K = this._hmac().update(this.V).update([0x01]).update(seed).digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils_1.toArray(entropy, entropyEnc);\n  add = utils_1.toArray(add, addEnc);\n  minimalisticAssert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval) throw new Error('Reseed is required'); // Optional encoding\n\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  } // Optional additional data\n\n\n  if (add) {\n    add = utils_1.toArray(add, addEnc || 'hex');\n\n    this._update(add);\n  }\n\n  var temp = [];\n\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n\n  this._update(add);\n\n  this._reseed++;\n  return utils_1.encode(res, enc);\n};\n\n'use strict';\n\nvar assert$3 = utils_1$1.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null; // KeyPair(ec, { priv: ..., pub: ... })\n\n  if (options.priv) this._importPrivate(options.priv, options.privEnc);\n  if (options.pub) this._importPublic(options.pub, options.pubEnc);\n}\n\nvar key = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair) return pub;\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair) return priv;\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n  if (pub.isInfinity()) return {\n    result: false,\n    reason: 'Invalid public key'\n  };\n  if (!pub.validate()) return {\n    result: false,\n    reason: 'Public key is not a point'\n  };\n  if (!pub.mul(this.ec.curve.n).isInfinity()) return {\n    result: false,\n    reason: 'Public key * N != O'\n  };\n  return {\n    result: true,\n    reason: null\n  };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub) this.pub = this.ec.g.mul(this.priv);\n  if (!enc) return this.pub;\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex') return this.priv.toString(16, 2);else return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16); // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert$3(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' || this.ec.curve.type === 'edwards') {\n      assert$3(key.x && key.y, 'Need both x and y coordinate');\n    }\n\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n\n  this.pub = this.ec.curve.decodePoint(key, enc);\n}; // ECDH\n\n\nKeyPair.prototype.derive = function derive(pub) {\n  if (!pub.validate()) {\n    assert$3(pub.validate(), 'public point not validated');\n  }\n\n  return pub.mul(this.priv).getX();\n}; // ECDSA\n\n\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) + ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n\n'use strict';\n\nvar assert$4 = utils_1$1.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature) return options;\n  if (this._importDER(options, enc)) return;\n  assert$4(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined) this.recoveryParam = null;else this.recoveryParam = options.recoveryParam;\n}\n\nvar signature = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n\n  var octetLen = initial & 0xf; // Indefinite length or overflow\n\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  } // Leading zeroes\n\n\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n\n  if (i === 0) {\n    return buf;\n  }\n\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils_1$1.toArray(data, enc);\n  var p = new Position();\n\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n\n  var len = getLength(data, p);\n\n  if (len === false) {\n    return false;\n  }\n\n  if (len + p.place !== data.length) {\n    return false;\n  }\n\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n\n  var rlen = getLength(data, p);\n\n  if (rlen === false) {\n    return false;\n  }\n\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n\n  var slen = getLength(data, p);\n\n  if (slen === false) {\n    return false;\n  }\n\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n\n  var s = data.slice(p.place, slen + p.place);\n\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n\n  while (--octets) {\n    arr.push(len >>> (octets << 3) & 0xff);\n  }\n\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray(); // Pad values\n\n  if (r[0] & 0x80) r = [0].concat(r); // Pad values\n\n  if (s[0] & 0x80) s = [0].concat(s);\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n\n  var arr = [0x02];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [0x30];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils_1$1.encode(res, enc);\n};\n\n'use strict';\n\nvar rand =\n/*RicMoo:ethers:require(brorand)*/\nfunction rand() {\n  throw new Error('unsupported');\n};\n\nvar assert$5 = utils_1$1.assert;\n\nfunction EC(options) {\n  if (!(this instanceof EC)) return new EC(options); // Shortcut `elliptic.ec(curve-name)`\n\n  if (typeof options === 'string') {\n    assert$5(Object.prototype.hasOwnProperty.call(curves_1, options), 'Unknown curve ' + options);\n    options = curves_1[options];\n  } // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n\n\n  if (options instanceof curves_1.PresetCurve) options = {\n    curve: options\n  };\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g; // Point on curve\n\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1); // Hash for function for DRBG\n\n  this.hash = options.hash || options.curve.hash;\n}\n\nvar ec = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new key(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return key.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return key.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options) options = {}; // Instantiate Hmac_DRBG\n\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray()\n  });\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0) continue;\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0) msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0) return msg.sub(this.n);else return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n\n  if (!options) options = {};\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16)); // Zero-extend key to provide enough entropy\n\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes); // Zero-extend nonce to have the same byte size as N\n\n  var nonce = msg.toArray('be', bytes); // Instantiate Hmac_DRBG\n\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8'\n  }); // Number of bytes to generate\n\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0;; iter++) {\n    var k = options.k ? options.k(iter) : new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) continue;\n    var kp = this.g.mul(k);\n    if (kp.isInfinity()) continue;\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0) continue;\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0) continue;\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0); // Use complement of `s`, if it is > `n / 2`\n\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new signature({\n      r: r,\n      s: s,\n      recoveryParam: recoveryParam\n    });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature$1, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature$1 = new signature(signature$1, 'hex'); // Perform primitive values validation\n\n  var r = signature$1.r;\n  var s = signature$1.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return false; // Validate signature\n\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity()) return false;\n    return p.getX().umod(this.n).cmp(r) === 0;\n  } // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity()) return false; // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function (msg, signature$1, j, enc) {\n  assert$5((3 & j) === j, 'The recovery param is more than two bits');\n  signature$1 = new signature(signature$1, enc);\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature$1.r;\n  var s = signature$1.s; // A set LSB signifies that the y-coordinate is odd\n\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw new Error('Unable to find sencond key candinate'); // 1.1. Let x = r + jn.\n\n  if (isSecondKey) r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);else r = this.curve.pointFromX(r, isYOdd);\n  var rInv = signature$1.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n); // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function (e, signature$1, Q, enc) {\n  signature$1 = new signature(signature$1, enc);\n  if (signature$1.recoveryParam !== null) return signature$1.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n\n    try {\n      Qprime = this.recoverPubKey(e, signature$1, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q)) return i;\n  }\n\n  throw new Error('Unable to find valid recovery factor');\n};\n\nvar elliptic_1 = createCommonjsModule(function (module, exports) {\n  'use strict';\n\n  var elliptic = exports;\n  elliptic.version =\n  /*RicMoo:ethers*/\n  {\n    version: \"6.5.4\"\n  }.version;\n  elliptic.utils = utils_1$1;\n\n  elliptic.rand =\n  /*RicMoo:ethers:require(brorand)*/\n  function () {\n    throw new Error('unsupported');\n  };\n\n  elliptic.curve = curve_1;\n  elliptic.curves = curves_1; // Protocols\n\n  elliptic.ec = ec;\n  elliptic.eddsa =\n  /*RicMoo:ethers:require(./elliptic/eddsa)*/\n  null;\n});\nvar EC$1 = elliptic_1.ec;\nexport { EC$1 as EC };","map":{"version":3,"names":["BN","hash","commonjsGlobal","globalThis","window","global","self","getDefaultExportFromCjs","x","__esModule","Object","prototype","hasOwnProperty","call","createCommonjsModule","fn","basedir","module","path","exports","require","base","commonjsRequire","undefined","getDefaultExportFromNamespaceIfPresent","n","getDefaultExportFromNamespaceIfNotNamed","keys","length","getAugmentedNamespace","a","defineProperty","value","forEach","k","d","getOwnPropertyDescriptor","get","enumerable","Error","minimalisticAssert","assert","val","msg","equal","assertEqual","l","r","utils_1","utils","toArray","enc","Array","isArray","slice","res","i","replace","push","parseInt","c","charCodeAt","hi","lo","zero2","word","toHex","toString","encode","arr","utils_1$1","getNAF","num","w","bits","naf","Math","max","bitLength","fill","ws","clone","z","mod","andln","isOdd","isubn","iushrn","getJSF","k1","k2","jsf","d1","d2","m8","cmpn","m14","m24","u1","u2","cachedProperty","obj","name","computer","key","parseBytes","bytes","intFromLE","assert$1","BaseCurve","type","conf","p","red","prime","mont","zero","toRed","one","two","g","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","adjustCount","div","redN","_maxwellTrick","point","validate","_fixedNafMul","precomputed","doubles","_getDoubles","I","step","repr","j","nafW","jpoint","b","mixedAdd","points","neg","add","toP","_wnafMul","nafPoints","_getNAFPoints","wnd","acc","dblp","_wnafMulAdd","defW","coeffs","len","jacobianResult","wndWidth","comb","y","cmp","toJ","redNeg","index","ja","jb","tmp","BasePoint","curve","eq","decodePoint","byteLength","pointFromX","encodeCompressed","_encode","compact","getX","getY","isEven","concat","precompute","power","beta","_getBeta","_hasDoubles","ceil","dbl","inherits_browser","create","inherits","ctor","superCtor","super_","constructor","writable","configurable","TempCtor","assert$2","ShortCurve","tinv","redInvm","zeroA","fromRed","threeA","sub","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","short_1","modn","lambda","betas","_getEndoRoots","lambdas","mul","redMul","basis","map","vec","_getEndoBasis","ntinv","s","redSqrt","l1","redAdd","l2","redSub","aprxSqrt","ushrn","floor","u","v","x1","y1","x2","y2","a0","b0","a1","b1","a2","b2","prevR","q","len1","sqr","len2","negative","_endoSplit","v1","v2","c1","divRound","c2","p1","p2","q1","q2","odd","redSqr","redIAdd","inf","ax","rhs","redISub","_endoWnafMulAdd","npoints","ncoeffs","split","ineg","Point","isRed","forceRed","fromJSON","pre","endoMul","toJSON","JSON","parse","obj2point","inspect","isInfinity","nx","ny","ys1","dyinv","mulAdd","jmulAdd","_precompute","negate","JPoint","zOne","zinv","zinv2","ay","pz2","z2","s1","s2","h","h2","h3","nz","pow","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","m","t","yyyy8","e","f","c8","delta","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","rx","xc","iadd","curve_1","short","edwards","curves_1","curves","PresetCurve","options","defineCurve","sha256","sha384","sha512","crash","HmacDRBG","predResist","outLen","outSize","minEntropy","hmacStrength","_reseed","reseedInterval","K","V","entropy","entropyEnc","nonce","nonceEnc","pers","persEnc","_init","hmacDrbg","init","seed","_update","_hmac","hmac","update","kmac","digest","reseed","addEnc","generate","temp","assert$3","KeyPair","ec","priv","pub","_importPrivate","privEnc","_importPublic","pubEnc","fromPublic","fromPrivate","getPublic","result","reason","getPrivate","umod","derive","sign","verify","signature","assert$4","Signature","_importDER","recoveryParam","Position","place","getLength","buf","initial","octetLen","off","rmPadding","data","rlen","slen","constructLength","octets","log","LN2","toDER","backHalf","rand","assert$5","EC","nh","keyPair","keyFromPrivate","keyFromPublic","genKeyPair","drbg","ns2","iaddn","_truncateToN","truncOnly","bkey","ns1","iter","kp","kpX","invm","canonical","signature$1","sinv","recoverPubKey","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime","elliptic_1","elliptic","version","eddsa","EC$1"],"sources":["C:/Users/x7491/Creating-Art-With-NFT-Generator/mintnft/node_modules/@ethersproject/signing-key/lib.esm/elliptic.js"],"sourcesContent":["import BN from 'bn.js';\nimport hash from 'hash.js';\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t\tpath: basedir,\n\t\texports: {},\n\t\trequire: function (path, base) {\n\t\t\treturn commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n\t\t}\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction getDefaultExportFromNamespaceIfPresent (n) {\n\treturn n && Object.prototype.hasOwnProperty.call(n, 'default') ? n['default'] : n;\n}\n\nfunction getDefaultExportFromNamespaceIfNotNamed (n) {\n\treturn n && Object.prototype.hasOwnProperty.call(n, 'default') && Object.keys(n).length === 1 ? n['default'] : n;\n}\n\nfunction getAugmentedNamespace(n) {\n\tif (n.__esModule) return n;\n\tvar a = Object.defineProperty({}, '__esModule', {value: true});\n\tObject.keys(n).forEach(function (k) {\n\t\tvar d = Object.getOwnPropertyDescriptor(n, k);\n\t\tObject.defineProperty(a, k, d.get ? d : {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn n[k];\n\t\t\t}\n\t\t});\n\t});\n\treturn a;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar minimalisticAssert = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n\nvar utils_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n});\n\nvar utils_1$1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nvar utils = exports;\n\n\n\n\nutils.assert = minimalisticAssert;\nutils.toArray = utils_1.toArray;\nutils.zero2 = utils_1.zero2;\nutils.toHex = utils_1.toHex;\nutils.encode = utils_1.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n});\n\n'use strict';\n\n\n\nvar getNAF = utils_1$1.getNAF;\nvar getJSF = utils_1$1.getJSF;\nvar assert$1 = utils_1$1.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nvar base = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert$1(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert$1(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils_1$1.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert$1(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert$1(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils_1$1.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n\nvar inherits_browser = createCommonjsModule(function (module) {\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n      var TempCtor = function () {};\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    }\n  };\n}\n});\n\n'use strict';\n\n\n\n\n\n\nvar assert$2 = utils_1$1.assert;\n\nfunction ShortCurve(conf) {\n  base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits_browser(ShortCurve, base);\nvar short_1 = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert$2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits_browser(Point, base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits_browser(JPoint, base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nvar curve_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nvar curve = exports;\n\ncurve.base = base;\ncurve.short = short_1;\ncurve.mont = /*RicMoo:ethers:require(./mont)*/(null);\ncurve.edwards = /*RicMoo:ethers:require(./edwards)*/(null);\n});\n\nvar curves_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nvar curves = exports;\n\n\n\n\n\nvar assert = utils_1$1.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve_1.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve_1.edwards(options);\n  else\n    this.curve = new curve_1.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = /*RicMoo:ethers:require(./precomputed/secp256k1)*/(null).crash();\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n});\n\n'use strict';\n\n\n\n\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils_1.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils_1.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils_1.toArray(options.pers, options.persEnc || 'hex');\n  minimalisticAssert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nvar hmacDrbg = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils_1.toArray(entropy, entropyEnc);\n  add = utils_1.toArray(add, addEnc);\n\n  minimalisticAssert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils_1.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils_1.encode(res, enc);\n};\n\n'use strict';\n\n\n\nvar assert$3 = utils_1$1.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nvar key = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert$3(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert$3(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert$3(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n\n'use strict';\n\n\n\n\nvar assert$4 = utils_1$1.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert$4(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nvar signature = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils_1$1.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils_1$1.encode(res, enc);\n};\n\n'use strict';\n\n\n\n\n\nvar rand = /*RicMoo:ethers:require(brorand)*/(function() { throw new Error('unsupported'); });\nvar assert$5 = utils_1$1.assert;\n\n\n\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert$5(Object.prototype.hasOwnProperty.call(curves_1, options),\n      'Unknown curve ' + options);\n\n    options = curves_1[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves_1.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nvar ec = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new key(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return key.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return key.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature$1, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature$1 = new signature(signature$1, 'hex');\n\n  // Perform primitive values validation\n  var r = signature$1.r;\n  var s = signature$1.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature$1, j, enc) {\n  assert$5((3 & j) === j, 'The recovery param is more than two bits');\n  signature$1 = new signature(signature$1, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature$1.r;\n  var s = signature$1.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature$1.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature$1, Q, enc) {\n  signature$1 = new signature(signature$1, enc);\n  if (signature$1.recoveryParam !== null)\n    return signature$1.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature$1, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n\nvar elliptic_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = /*RicMoo:ethers*/{ version: \"6.5.4\" }.version;\nelliptic.utils = utils_1$1;\nelliptic.rand = /*RicMoo:ethers:require(brorand)*/(function() { throw new Error('unsupported'); });\nelliptic.curve = curve_1;\nelliptic.curves = curves_1;\n\n// Protocols\nelliptic.ec = ec;\nelliptic.eddsa = /*RicMoo:ethers:require(./elliptic/eddsa)*/(null);\n});\n\nvar EC$1 = elliptic_1.ec;\n\nexport { EC$1 as EC };\n//# sourceMappingURL=browser-elliptic.js.map\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}