{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\x7491\\\\nft-minter-tutorial\\\\minter-starter-files\\\\src\\\\Minter.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { connectWallet, getCurrentWalletConnected, mintNFT } from \"./utils/interact.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Minter = props => {\n  _s();\n\n  //State variables\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [url, setImage] = useState(\"\");\n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n          setStatus(\"👆🏽 Write a message in the text-field above.\");\n        } else {\n          setWallet(\"\");\n          setStatus(\"🦊 Connect to Metamask using the top right button.\");\n        }\n      });\n    } else {\n      setStatus( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", \"\\uD83E\\uDD8A\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          href: `https://metamask.io/download.html`,\n          children: \"You must install Metamask, a virtual Ethereum wallet, in your browser.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this));\n    }\n  }\n\n  useEffect(async () => {\n    const {\n      address,\n      status\n    } = await getCurrentWalletConnected();\n    setWallet(address);\n    setStatus(status);\n    addWalletListener();\n  }, []);\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n  const onMintPressed = async () => {\n    const {\n      status\n    } = await mintNFT(url, name, description);\n    setStatus(status);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Minter\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"walletButton\",\n      onClick: connectWalletPressed,\n      children: walletAddress.length > 0 ? \"Connected: \" + String(walletAddress).substring(0, 6) + \"...\" + String(walletAddress).substring(38) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"title\",\n      children: \"\\uD83E\\uDDD9\\u200D\\u2642\\uFE0F Alchemy NFT Minter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Simply add your asset's link, name, and description, then press \\\"Mint.\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDDBC Link to asset: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), \"//        \", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: image,\n        onChange: e => setImage(e.target.value),\n        children: [\"//     \", animals.map(animal => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: animal,\n          children: animal\n        }, animal, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 31\n        }, this)), \"//        \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"image\" //placeholder=\"e.g. https://gateway.pinata.cloud/ipfs/<hash>\"\n        ,\n        onChange: event => setImage(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83E\\uDD14 Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"e.g. My first NFT!\",\n        onChange: event => setName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u270D\\uFE0F Description: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"e.g. Even cooler than cryptokitties ;)\",\n        onChange: event => setDescription(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"mintButton\",\n      onClick: onMintPressed,\n      children: \"Mint NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Minter, \"2mXw/VQh0kjTAgF7LY+1jh6JTzU=\");\n\n_c = Minter;\nexport default Minter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Minter\");","map":{"version":3,"sources":["C:/Users/x7491/nft-minter-tutorial/minter-starter-files/src/Minter.js"],"names":["useEffect","useState","connectWallet","getCurrentWalletConnected","mintNFT","Minter","props","walletAddress","setWallet","status","setStatus","name","setName","description","setDescription","url","setImage","addWalletListener","window","ethereum","on","accounts","length","address","connectWalletPressed","walletResponse","onMintPressed","String","substring","image","e","target","value","animals","map","animal","event"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { connectWallet, getCurrentWalletConnected, mintNFT } from \"./utils/interact.js\";\r\n\r\nconst Minter = (props) => {\r\n\r\n  //State variables\r\n  const [walletAddress, setWallet] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [url, setImage] = useState(\"\");\r\n\r\n  function addWalletListener() {\r\n  if (window.ethereum) {\r\n    window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n      if (accounts.length > 0) {\r\n        setWallet(accounts[0]);\r\n        setStatus(\"👆🏽 Write a message in the text-field above.\");\r\n      } else {\r\n        setWallet(\"\");\r\n        setStatus(\"🦊 Connect to Metamask using the top right button.\");\r\n      }\r\n    });\r\n  } else {\r\n    setStatus(\r\n      <p>\r\n        {\" \"}\r\n        🦊{\" \"}\r\n        <a target=\"_blank\" href={`https://metamask.io/download.html`}>\r\n          You must install Metamask, a virtual Ethereum wallet, in your\r\n          browser.\r\n        </a>\r\n      </p>\r\n    );\r\n  }\r\n}\r\n \r\n    useEffect(async () => {\r\n        const {address, status} = await getCurrentWalletConnected();\r\n        setWallet(address)\r\n        setStatus(status);\r\n        addWalletListener();\r\n    }, []);\r\n\r\n  const connectWalletPressed = async () => {\r\n    const walletResponse = await connectWallet();\r\n    setStatus(walletResponse.status);\r\n    setWallet(walletResponse.address);\r\n  };\r\n\r\nconst onMintPressed = async () => {\r\n    const { status } = await mintNFT(url, name, description);\r\n    setStatus(status);\r\n};\r\n\r\n  return (\r\n    <div className=\"Minter\">\r\n      <button id=\"walletButton\" onClick={connectWalletPressed}>\r\n        {walletAddress.length > 0 ? (\r\n          \"Connected: \" +\r\n          String(walletAddress).substring(0, 6) +\r\n          \"...\" +\r\n          String(walletAddress).substring(38)\r\n        ) : (\r\n          <span>Connect Wallet</span>\r\n        )}\r\n      </button>\r\n\r\n      <br></br>\r\n      <h1 id=\"title\">🧙‍♂️ Alchemy NFT Minter</h1>\r\n      <p>\r\n        Simply add your asset's link, name, and description, then press \"Mint.\"\r\n      </p>\r\n      <form>\r\n        <h2>🖼 Link to asset: </h2>\r\n//        <select value={image} onChange={e => setImage(e.target.value)}>\r\n//     {animals.map(animal => <option key={animal} value={animal}>{animal}</option>)}\r\n//        </select>\r\n        <input\r\n          type=\"image\"\r\n          //placeholder=\"e.g. https://gateway.pinata.cloud/ipfs/<hash>\"\r\n          onChange={(event) => setImage(event.target.value)}\r\n        />\r\n        <h2>🤔 Name: </h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"e.g. My first NFT!\"\r\n          onChange={(event) => setName(event.target.value)}\r\n        />\r\n        <h2>✍️ Description: </h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"e.g. Even cooler than cryptokitties ;)\"\r\n          onChange={(event) => setDescription(event.target.value)}\r\n        />\r\n      </form>\r\n      <button id=\"mintButton\" onClick={onMintPressed}>\r\n        Mint NFT\r\n      </button>\r\n      <p id=\"status\">\r\n        {status}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Minter;\r\n"]},"metadata":{},"sourceType":"module"}