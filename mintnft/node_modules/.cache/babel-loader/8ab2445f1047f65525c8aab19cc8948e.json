{"ast":null,"code":"(function (self) {\n  'use strict';\n\n  function fetchPonyfill(options) {\n    var Promise = options && options.Promise || self.Promise;\n    var XMLHttpRequest = options && options.XMLHttpRequest || self.XMLHttpRequest;\n    var global = self;\n    return function () {\n      var self = Object.create(global, {\n        fetch: {\n          value: undefined,\n          writable: true\n        }\n      });\n\n      (function (self) {\n        'use strict';\n\n        if (self.fetch) {\n          return;\n        }\n\n        var support = {\n          searchParams: 'URLSearchParams' in self,\n          iterable: 'Symbol' in self && 'iterator' in Symbol,\n          blob: 'FileReader' in self && 'Blob' in self && function () {\n            try {\n              new Blob();\n              return true;\n            } catch (e) {\n              return false;\n            }\n          }(),\n          formData: 'FormData' in self,\n          arrayBuffer: 'ArrayBuffer' in self\n        };\n\n        if (support.arrayBuffer) {\n          var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];\n\n          var isDataView = function isDataView(obj) {\n            return obj && DataView.prototype.isPrototypeOf(obj);\n          };\n\n          var isArrayBufferView = ArrayBuffer.isView || function (obj) {\n            return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;\n          };\n        }\n\n        function normalizeName(name) {\n          if (typeof name !== 'string') {\n            name = String(name);\n          }\n\n          if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n            throw new TypeError('Invalid character in header field name');\n          }\n\n          return name.toLowerCase();\n        }\n\n        function normalizeValue(value) {\n          if (typeof value !== 'string') {\n            value = String(value);\n          }\n\n          return value;\n        } // Build a destructive iterator for the value list\n\n\n        function iteratorFor(items) {\n          var iterator = {\n            next: function next() {\n              var value = items.shift();\n              return {\n                done: value === undefined,\n                value: value\n              };\n            }\n          };\n\n          if (support.iterable) {\n            iterator[Symbol.iterator] = function () {\n              return iterator;\n            };\n          }\n\n          return iterator;\n        }\n\n        function Headers(headers) {\n          this.map = {};\n\n          if (headers instanceof Headers) {\n            headers.forEach(function (value, name) {\n              this.append(name, value);\n            }, this);\n          } else if (Array.isArray(headers)) {\n            headers.forEach(function (header) {\n              this.append(header[0], header[1]);\n            }, this);\n          } else if (headers) {\n            Object.getOwnPropertyNames(headers).forEach(function (name) {\n              this.append(name, headers[name]);\n            }, this);\n          }\n        }\n\n        Headers.prototype.append = function (name, value) {\n          name = normalizeName(name);\n          value = normalizeValue(value);\n          var oldValue = this.map[name];\n          this.map[name] = oldValue ? oldValue + ',' + value : value;\n        };\n\n        Headers.prototype['delete'] = function (name) {\n          delete this.map[normalizeName(name)];\n        };\n\n        Headers.prototype.get = function (name) {\n          name = normalizeName(name);\n          return this.has(name) ? this.map[name] : null;\n        };\n\n        Headers.prototype.has = function (name) {\n          return this.map.hasOwnProperty(normalizeName(name));\n        };\n\n        Headers.prototype.set = function (name, value) {\n          this.map[normalizeName(name)] = normalizeValue(value);\n        };\n\n        Headers.prototype.forEach = function (callback, thisArg) {\n          for (var name in this.map) {\n            if (this.map.hasOwnProperty(name)) {\n              callback.call(thisArg, this.map[name], name, this);\n            }\n          }\n        };\n\n        Headers.prototype.keys = function () {\n          var items = [];\n          this.forEach(function (value, name) {\n            items.push(name);\n          });\n          return iteratorFor(items);\n        };\n\n        Headers.prototype.values = function () {\n          var items = [];\n          this.forEach(function (value) {\n            items.push(value);\n          });\n          return iteratorFor(items);\n        };\n\n        Headers.prototype.entries = function () {\n          var items = [];\n          this.forEach(function (value, name) {\n            items.push([name, value]);\n          });\n          return iteratorFor(items);\n        };\n\n        if (support.iterable) {\n          Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n        }\n\n        function consumed(body) {\n          if (body.bodyUsed) {\n            return Promise.reject(new TypeError('Already read'));\n          }\n\n          body.bodyUsed = true;\n        }\n\n        function fileReaderReady(reader) {\n          return new Promise(function (resolve, reject) {\n            reader.onload = function () {\n              resolve(reader.result);\n            };\n\n            reader.onerror = function () {\n              reject(reader.error);\n            };\n          });\n        }\n\n        function readBlobAsArrayBuffer(blob) {\n          var reader = new FileReader();\n          var promise = fileReaderReady(reader);\n          reader.readAsArrayBuffer(blob);\n          return promise;\n        }\n\n        function readBlobAsText(blob) {\n          var reader = new FileReader();\n          var promise = fileReaderReady(reader);\n          reader.readAsText(blob);\n          return promise;\n        }\n\n        function readArrayBufferAsText(buf) {\n          var view = new Uint8Array(buf);\n          var chars = new Array(view.length);\n\n          for (var i = 0; i < view.length; i++) {\n            chars[i] = String.fromCharCode(view[i]);\n          }\n\n          return chars.join('');\n        }\n\n        function bufferClone(buf) {\n          if (buf.slice) {\n            return buf.slice(0);\n          } else {\n            var view = new Uint8Array(buf.byteLength);\n            view.set(new Uint8Array(buf));\n            return view.buffer;\n          }\n        }\n\n        function Body() {\n          this.bodyUsed = false;\n\n          this._initBody = function (body) {\n            this._bodyInit = body;\n\n            if (!body) {\n              this._bodyText = '';\n            } else if (typeof body === 'string') {\n              this._bodyText = body;\n            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n              this._bodyBlob = body;\n            } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n              this._bodyFormData = body;\n            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n              this._bodyText = body.toString();\n            } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n              this._bodyArrayBuffer = bufferClone(body.buffer); // IE 10-11 can't handle a DataView body.\n\n              this._bodyInit = new Blob([this._bodyArrayBuffer]);\n            } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n              this._bodyArrayBuffer = bufferClone(body);\n            } else {\n              throw new Error('unsupported BodyInit type');\n            }\n\n            if (!this.headers.get('content-type')) {\n              if (typeof body === 'string') {\n                this.headers.set('content-type', 'text/plain;charset=UTF-8');\n              } else if (this._bodyBlob && this._bodyBlob.type) {\n                this.headers.set('content-type', this._bodyBlob.type);\n              } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n                this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n              }\n            }\n          };\n\n          if (support.blob) {\n            this.blob = function () {\n              var rejected = consumed(this);\n\n              if (rejected) {\n                return rejected;\n              }\n\n              if (this._bodyBlob) {\n                return Promise.resolve(this._bodyBlob);\n              } else if (this._bodyArrayBuffer) {\n                return Promise.resolve(new Blob([this._bodyArrayBuffer]));\n              } else if (this._bodyFormData) {\n                throw new Error('could not read FormData body as blob');\n              } else {\n                return Promise.resolve(new Blob([this._bodyText]));\n              }\n            };\n\n            this.arrayBuffer = function () {\n              if (this._bodyArrayBuffer) {\n                return consumed(this) || Promise.resolve(this._bodyArrayBuffer);\n              } else {\n                return this.blob().then(readBlobAsArrayBuffer);\n              }\n            };\n          }\n\n          this.text = function () {\n            var rejected = consumed(this);\n\n            if (rejected) {\n              return rejected;\n            }\n\n            if (this._bodyBlob) {\n              return readBlobAsText(this._bodyBlob);\n            } else if (this._bodyArrayBuffer) {\n              return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));\n            } else if (this._bodyFormData) {\n              throw new Error('could not read FormData body as text');\n            } else {\n              return Promise.resolve(this._bodyText);\n            }\n          };\n\n          if (support.formData) {\n            this.formData = function () {\n              return this.text().then(decode);\n            };\n          }\n\n          this.json = function () {\n            return this.text().then(JSON.parse);\n          };\n\n          return this;\n        } // HTTP methods whose capitalization should be normalized\n\n\n        var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n        function normalizeMethod(method) {\n          var upcased = method.toUpperCase();\n          return methods.indexOf(upcased) > -1 ? upcased : method;\n        }\n\n        function Request(input, options) {\n          options = options || {};\n          var body = options.body;\n\n          if (input instanceof Request) {\n            if (input.bodyUsed) {\n              throw new TypeError('Already read');\n            }\n\n            this.url = input.url;\n            this.credentials = input.credentials;\n\n            if (!options.headers) {\n              this.headers = new Headers(input.headers);\n            }\n\n            this.method = input.method;\n            this.mode = input.mode;\n\n            if (!body && input._bodyInit != null) {\n              body = input._bodyInit;\n              input.bodyUsed = true;\n            }\n          } else {\n            this.url = String(input);\n          }\n\n          this.credentials = options.credentials || this.credentials || 'omit';\n\n          if (options.headers || !this.headers) {\n            this.headers = new Headers(options.headers);\n          }\n\n          this.method = normalizeMethod(options.method || this.method || 'GET');\n          this.mode = options.mode || this.mode || null;\n          this.referrer = null;\n\n          if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n            throw new TypeError('Body not allowed for GET or HEAD requests');\n          }\n\n          this._initBody(body);\n        }\n\n        Request.prototype.clone = function () {\n          return new Request(this, {\n            body: this._bodyInit\n          });\n        };\n\n        function decode(body) {\n          var form = new FormData();\n          body.trim().split('&').forEach(function (bytes) {\n            if (bytes) {\n              var split = bytes.split('=');\n              var name = split.shift().replace(/\\+/g, ' ');\n              var value = split.join('=').replace(/\\+/g, ' ');\n              form.append(decodeURIComponent(name), decodeURIComponent(value));\n            }\n          });\n          return form;\n        }\n\n        function parseHeaders(rawHeaders) {\n          var headers = new Headers(); // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n          // https://tools.ietf.org/html/rfc7230#section-3.2\n\n          var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n          preProcessedHeaders.split(/\\r?\\n/).forEach(function (line) {\n            var parts = line.split(':');\n            var key = parts.shift().trim();\n\n            if (key) {\n              var value = parts.join(':').trim();\n              headers.append(key, value);\n            }\n          });\n          return headers;\n        }\n\n        Body.call(Request.prototype);\n\n        function Response(bodyInit, options) {\n          if (!options) {\n            options = {};\n          }\n\n          this.type = 'default';\n          this.status = options.status === undefined ? 200 : options.status;\n          this.ok = this.status >= 200 && this.status < 300;\n          this.statusText = 'statusText' in options ? options.statusText : 'OK';\n          this.headers = new Headers(options.headers);\n          this.url = options.url || '';\n\n          this._initBody(bodyInit);\n        }\n\n        Body.call(Response.prototype);\n\n        Response.prototype.clone = function () {\n          return new Response(this._bodyInit, {\n            status: this.status,\n            statusText: this.statusText,\n            headers: new Headers(this.headers),\n            url: this.url\n          });\n        };\n\n        Response.error = function () {\n          var response = new Response(null, {\n            status: 0,\n            statusText: ''\n          });\n          response.type = 'error';\n          return response;\n        };\n\n        var redirectStatuses = [301, 302, 303, 307, 308];\n\n        Response.redirect = function (url, status) {\n          if (redirectStatuses.indexOf(status) === -1) {\n            throw new RangeError('Invalid status code');\n          }\n\n          return new Response(null, {\n            status: status,\n            headers: {\n              location: url\n            }\n          });\n        };\n\n        self.Headers = Headers;\n        self.Request = Request;\n        self.Response = Response;\n\n        self.fetch = function (input, init) {\n          return new Promise(function (resolve, reject) {\n            var request = new Request(input, init);\n            var xhr = new XMLHttpRequest();\n\n            xhr.onload = function () {\n              var options = {\n                status: xhr.status,\n                statusText: xhr.statusText,\n                headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n              };\n              options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n              var body = 'response' in xhr ? xhr.response : xhr.responseText;\n              resolve(new Response(body, options));\n            };\n\n            xhr.onerror = function () {\n              reject(new TypeError('Network request failed'));\n            };\n\n            xhr.ontimeout = function () {\n              reject(new TypeError('Network request failed'));\n            };\n\n            xhr.open(request.method, request.url, true);\n\n            if (request.credentials === 'include') {\n              xhr.withCredentials = true;\n            } else if (request.credentials === 'omit') {\n              xhr.withCredentials = false;\n            }\n\n            if ('responseType' in xhr && support.blob) {\n              xhr.responseType = 'blob';\n            }\n\n            request.headers.forEach(function (value, name) {\n              xhr.setRequestHeader(name, value);\n            });\n            xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n          });\n        };\n\n        self.fetch.polyfill = true;\n      })(typeof self !== 'undefined' ? self : this);\n\n      return {\n        fetch: self.fetch,\n        Headers: self.Headers,\n        Request: self.Request,\n        Response: self.Response\n      };\n    }();\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return fetchPonyfill;\n    });\n  } else if (typeof exports === 'object') {\n    module.exports = fetchPonyfill;\n  } else {\n    self.fetchPonyfill = fetchPonyfill;\n  }\n})(typeof self !== 'undefined' ? self : typeof global !== 'undefined' ? global : this);","map":{"version":3,"names":["self","fetchPonyfill","options","Promise","XMLHttpRequest","global","Object","create","fetch","value","undefined","writable","support","searchParams","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","viewClasses","isDataView","obj","DataView","prototype","isPrototypeOf","isArrayBufferView","ArrayBuffer","isView","indexOf","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","done","Headers","headers","map","forEach","append","Array","isArray","header","getOwnPropertyNames","oldValue","get","has","hasOwnProperty","set","callback","thisArg","keys","push","values","entries","consumed","body","bodyUsed","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","length","i","fromCharCode","join","bufferClone","slice","byteLength","buffer","Body","_initBody","_bodyInit","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","Error","type","rejected","then","text","decode","json","JSON","parse","methods","normalizeMethod","method","upcased","toUpperCase","Request","input","url","credentials","mode","referrer","clone","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","preProcessedHeaders","line","parts","key","Response","bodyInit","status","ok","statusText","response","redirectStatuses","redirect","RangeError","location","init","request","xhr","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","define","amd","exports","module"],"sources":["C:/Users/x7491/Creating-Art-With-NFT-Generator/mintnft/node_modules/fetch-ponyfill/build/fetch-browser.js"],"sourcesContent":["(function (self) {\n  'use strict';\n\n  function fetchPonyfill(options) {\n    var Promise = options && options.Promise || self.Promise;\n    var XMLHttpRequest = options && options.XMLHttpRequest || self.XMLHttpRequest;\n    var global = self;\n\n    return (function () {\n      var self = Object.create(global, {\n        fetch: {\n          value: undefined,\n          writable: true\n        }\n      });\n\n      (function(self) {\n        'use strict';\n\n        if (self.fetch) {\n          return\n        }\n\n        var support = {\n          searchParams: 'URLSearchParams' in self,\n          iterable: 'Symbol' in self && 'iterator' in Symbol,\n          blob: 'FileReader' in self && 'Blob' in self && (function() {\n            try {\n              new Blob()\n              return true\n            } catch(e) {\n              return false\n            }\n          })(),\n          formData: 'FormData' in self,\n          arrayBuffer: 'ArrayBuffer' in self\n        }\n\n        if (support.arrayBuffer) {\n          var viewClasses = [\n            '[object Int8Array]',\n            '[object Uint8Array]',\n            '[object Uint8ClampedArray]',\n            '[object Int16Array]',\n            '[object Uint16Array]',\n            '[object Int32Array]',\n            '[object Uint32Array]',\n            '[object Float32Array]',\n            '[object Float64Array]'\n          ]\n\n          var isDataView = function(obj) {\n            return obj && DataView.prototype.isPrototypeOf(obj)\n          }\n\n          var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n            return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n          }\n        }\n\n        function normalizeName(name) {\n          if (typeof name !== 'string') {\n            name = String(name)\n          }\n          if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n            throw new TypeError('Invalid character in header field name')\n          }\n          return name.toLowerCase()\n        }\n\n        function normalizeValue(value) {\n          if (typeof value !== 'string') {\n            value = String(value)\n          }\n          return value\n        }\n\n        // Build a destructive iterator for the value list\n        function iteratorFor(items) {\n          var iterator = {\n            next: function() {\n              var value = items.shift()\n              return {done: value === undefined, value: value}\n            }\n          }\n\n          if (support.iterable) {\n            iterator[Symbol.iterator] = function() {\n              return iterator\n            }\n          }\n\n          return iterator\n        }\n\n        function Headers(headers) {\n          this.map = {}\n\n          if (headers instanceof Headers) {\n            headers.forEach(function(value, name) {\n              this.append(name, value)\n            }, this)\n          } else if (Array.isArray(headers)) {\n            headers.forEach(function(header) {\n              this.append(header[0], header[1])\n            }, this)\n          } else if (headers) {\n            Object.getOwnPropertyNames(headers).forEach(function(name) {\n              this.append(name, headers[name])\n            }, this)\n          }\n        }\n\n        Headers.prototype.append = function(name, value) {\n          name = normalizeName(name)\n          value = normalizeValue(value)\n          var oldValue = this.map[name]\n          this.map[name] = oldValue ? oldValue+','+value : value\n        }\n\n        Headers.prototype['delete'] = function(name) {\n          delete this.map[normalizeName(name)]\n        }\n\n        Headers.prototype.get = function(name) {\n          name = normalizeName(name)\n          return this.has(name) ? this.map[name] : null\n        }\n\n        Headers.prototype.has = function(name) {\n          return this.map.hasOwnProperty(normalizeName(name))\n        }\n\n        Headers.prototype.set = function(name, value) {\n          this.map[normalizeName(name)] = normalizeValue(value)\n        }\n\n        Headers.prototype.forEach = function(callback, thisArg) {\n          for (var name in this.map) {\n            if (this.map.hasOwnProperty(name)) {\n              callback.call(thisArg, this.map[name], name, this)\n            }\n          }\n        }\n\n        Headers.prototype.keys = function() {\n          var items = []\n          this.forEach(function(value, name) { items.push(name) })\n          return iteratorFor(items)\n        }\n\n        Headers.prototype.values = function() {\n          var items = []\n          this.forEach(function(value) { items.push(value) })\n          return iteratorFor(items)\n        }\n\n        Headers.prototype.entries = function() {\n          var items = []\n          this.forEach(function(value, name) { items.push([name, value]) })\n          return iteratorFor(items)\n        }\n\n        if (support.iterable) {\n          Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n        }\n\n        function consumed(body) {\n          if (body.bodyUsed) {\n            return Promise.reject(new TypeError('Already read'))\n          }\n          body.bodyUsed = true\n        }\n\n        function fileReaderReady(reader) {\n          return new Promise(function(resolve, reject) {\n            reader.onload = function() {\n              resolve(reader.result)\n            }\n            reader.onerror = function() {\n              reject(reader.error)\n            }\n          })\n        }\n\n        function readBlobAsArrayBuffer(blob) {\n          var reader = new FileReader()\n          var promise = fileReaderReady(reader)\n          reader.readAsArrayBuffer(blob)\n          return promise\n        }\n\n        function readBlobAsText(blob) {\n          var reader = new FileReader()\n          var promise = fileReaderReady(reader)\n          reader.readAsText(blob)\n          return promise\n        }\n\n        function readArrayBufferAsText(buf) {\n          var view = new Uint8Array(buf)\n          var chars = new Array(view.length)\n\n          for (var i = 0; i < view.length; i++) {\n            chars[i] = String.fromCharCode(view[i])\n          }\n          return chars.join('')\n        }\n\n        function bufferClone(buf) {\n          if (buf.slice) {\n            return buf.slice(0)\n          } else {\n            var view = new Uint8Array(buf.byteLength)\n            view.set(new Uint8Array(buf))\n            return view.buffer\n          }\n        }\n\n        function Body() {\n          this.bodyUsed = false\n\n          this._initBody = function(body) {\n            this._bodyInit = body\n            if (!body) {\n              this._bodyText = ''\n            } else if (typeof body === 'string') {\n              this._bodyText = body\n            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n              this._bodyBlob = body\n            } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n              this._bodyFormData = body\n            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n              this._bodyText = body.toString()\n            } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n              this._bodyArrayBuffer = bufferClone(body.buffer)\n              // IE 10-11 can't handle a DataView body.\n              this._bodyInit = new Blob([this._bodyArrayBuffer])\n            } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n              this._bodyArrayBuffer = bufferClone(body)\n            } else {\n              throw new Error('unsupported BodyInit type')\n            }\n\n            if (!this.headers.get('content-type')) {\n              if (typeof body === 'string') {\n                this.headers.set('content-type', 'text/plain;charset=UTF-8')\n              } else if (this._bodyBlob && this._bodyBlob.type) {\n                this.headers.set('content-type', this._bodyBlob.type)\n              } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n                this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n              }\n            }\n          }\n\n          if (support.blob) {\n            this.blob = function() {\n              var rejected = consumed(this)\n              if (rejected) {\n                return rejected\n              }\n\n              if (this._bodyBlob) {\n                return Promise.resolve(this._bodyBlob)\n              } else if (this._bodyArrayBuffer) {\n                return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n              } else if (this._bodyFormData) {\n                throw new Error('could not read FormData body as blob')\n              } else {\n                return Promise.resolve(new Blob([this._bodyText]))\n              }\n            }\n\n            this.arrayBuffer = function() {\n              if (this._bodyArrayBuffer) {\n                return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n              } else {\n                return this.blob().then(readBlobAsArrayBuffer)\n              }\n            }\n          }\n\n          this.text = function() {\n            var rejected = consumed(this)\n            if (rejected) {\n              return rejected\n            }\n\n            if (this._bodyBlob) {\n              return readBlobAsText(this._bodyBlob)\n            } else if (this._bodyArrayBuffer) {\n              return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n            } else if (this._bodyFormData) {\n              throw new Error('could not read FormData body as text')\n            } else {\n              return Promise.resolve(this._bodyText)\n            }\n          }\n\n          if (support.formData) {\n            this.formData = function() {\n              return this.text().then(decode)\n            }\n          }\n\n          this.json = function() {\n            return this.text().then(JSON.parse)\n          }\n\n          return this\n        }\n\n        // HTTP methods whose capitalization should be normalized\n        var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n        function normalizeMethod(method) {\n          var upcased = method.toUpperCase()\n          return (methods.indexOf(upcased) > -1) ? upcased : method\n        }\n\n        function Request(input, options) {\n          options = options || {}\n          var body = options.body\n\n          if (input instanceof Request) {\n            if (input.bodyUsed) {\n              throw new TypeError('Already read')\n            }\n            this.url = input.url\n            this.credentials = input.credentials\n            if (!options.headers) {\n              this.headers = new Headers(input.headers)\n            }\n            this.method = input.method\n            this.mode = input.mode\n            if (!body && input._bodyInit != null) {\n              body = input._bodyInit\n              input.bodyUsed = true\n            }\n          } else {\n            this.url = String(input)\n          }\n\n          this.credentials = options.credentials || this.credentials || 'omit'\n          if (options.headers || !this.headers) {\n            this.headers = new Headers(options.headers)\n          }\n          this.method = normalizeMethod(options.method || this.method || 'GET')\n          this.mode = options.mode || this.mode || null\n          this.referrer = null\n\n          if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n            throw new TypeError('Body not allowed for GET or HEAD requests')\n          }\n          this._initBody(body)\n        }\n\n        Request.prototype.clone = function() {\n          return new Request(this, { body: this._bodyInit })\n        }\n\n        function decode(body) {\n          var form = new FormData()\n          body.trim().split('&').forEach(function(bytes) {\n            if (bytes) {\n              var split = bytes.split('=')\n              var name = split.shift().replace(/\\+/g, ' ')\n              var value = split.join('=').replace(/\\+/g, ' ')\n              form.append(decodeURIComponent(name), decodeURIComponent(value))\n            }\n          })\n          return form\n        }\n\n        function parseHeaders(rawHeaders) {\n          var headers = new Headers()\n          // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n          // https://tools.ietf.org/html/rfc7230#section-3.2\n          var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n          preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n            var parts = line.split(':')\n            var key = parts.shift().trim()\n            if (key) {\n              var value = parts.join(':').trim()\n              headers.append(key, value)\n            }\n          })\n          return headers\n        }\n\n        Body.call(Request.prototype)\n\n        function Response(bodyInit, options) {\n          if (!options) {\n            options = {}\n          }\n\n          this.type = 'default'\n          this.status = options.status === undefined ? 200 : options.status\n          this.ok = this.status >= 200 && this.status < 300\n          this.statusText = 'statusText' in options ? options.statusText : 'OK'\n          this.headers = new Headers(options.headers)\n          this.url = options.url || ''\n          this._initBody(bodyInit)\n        }\n\n        Body.call(Response.prototype)\n\n        Response.prototype.clone = function() {\n          return new Response(this._bodyInit, {\n            status: this.status,\n            statusText: this.statusText,\n            headers: new Headers(this.headers),\n            url: this.url\n          })\n        }\n\n        Response.error = function() {\n          var response = new Response(null, {status: 0, statusText: ''})\n          response.type = 'error'\n          return response\n        }\n\n        var redirectStatuses = [301, 302, 303, 307, 308]\n\n        Response.redirect = function(url, status) {\n          if (redirectStatuses.indexOf(status) === -1) {\n            throw new RangeError('Invalid status code')\n          }\n\n          return new Response(null, {status: status, headers: {location: url}})\n        }\n\n        self.Headers = Headers\n        self.Request = Request\n        self.Response = Response\n\n        self.fetch = function(input, init) {\n          return new Promise(function(resolve, reject) {\n            var request = new Request(input, init)\n            var xhr = new XMLHttpRequest()\n\n            xhr.onload = function() {\n              var options = {\n                status: xhr.status,\n                statusText: xhr.statusText,\n                headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n              }\n              options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n              var body = 'response' in xhr ? xhr.response : xhr.responseText\n              resolve(new Response(body, options))\n            }\n\n            xhr.onerror = function() {\n              reject(new TypeError('Network request failed'))\n            }\n\n            xhr.ontimeout = function() {\n              reject(new TypeError('Network request failed'))\n            }\n\n            xhr.open(request.method, request.url, true)\n\n            if (request.credentials === 'include') {\n              xhr.withCredentials = true\n            } else if (request.credentials === 'omit') {\n              xhr.withCredentials = false\n            }\n\n            if ('responseType' in xhr && support.blob) {\n              xhr.responseType = 'blob'\n            }\n\n            request.headers.forEach(function(value, name) {\n              xhr.setRequestHeader(name, value)\n            })\n\n            xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n          })\n        }\n        self.fetch.polyfill = true\n      })(typeof self !== 'undefined' ? self : this);\n\n\n      return {\n        fetch: self.fetch,\n        Headers: self.Headers,\n        Request: self.Request,\n        Response: self.Response\n      };\n    }());\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return fetchPonyfill;\n    });\n  } else if (typeof exports === 'object') {\n    module.exports = fetchPonyfill;\n  } else {\n    self.fetchPonyfill = fetchPonyfill;\n  }\n}(typeof self !== 'undefined' ? self : typeof global !== 'undefined' ? global : this));\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}